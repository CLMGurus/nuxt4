{"version":3,"file":"extensions_dicom-microscopy_src_DicomMicroscopyViewport_tsx.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAQA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AAtPA;AAeA;AAAA;AAyOA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACjQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAKA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAMA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvHA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAMA;AAIA;AAGA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChnsources":["webpack:///../../../extensions/dicom-microscopy/src/DicomMicroscopyViewport.css?56b5","file:////home/balasakthi/Downloads/Viewers-master/extensions/dicom-microscopy/src/DicomMicroscopyViewport.tsx","webpack:///../../../extensions/dicom-microscopy/src/components/ViewportOverlay/ViewportOverlay.css?cca1","file:////home/balasakthi/Downloads/Viewers-master/extensions/dicom-microscopy/src/components/ViewportOverlay/index.tsx","file:////home/balasakthi/Downloads/Viewers-master/extensions/dicom-microscopy/src/components/ViewportOverlay/listComponentGenerator.tsx","file:////home/balasakthi/Downloads/Viewers-master/extensions/dicom-microscopy/src/components/ViewportOverlay/utils.ts","file:////home/balasakthi/Downloads/Viewers-master/extensions/dicom-microscopy/src/utils/dicomWebClient.ts","file:////home/balasakthi/Downloads/Viewers-master/extensions/dicom-microscopy/src/DicomMicroscopyViewport.css","file:////home/balasakthi/Downloads/Viewers-master/extensions/dicom-microscopy/src/components/ViewportOverlay/ViewportOverlay.css"],"sourcesContent":["var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].use[2]!./DicomMicroscopyViewport.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { cleanDenaturalizedDataset } from '@ohif/extension-default';\n\nimport './DicomMicroscopyViewport.css';\nimport ViewportOverlay from './components/ViewportOverlay';\nimport getDicomWebClient from './utils/dicomWebClient';\nimport dcmjs from 'dcmjs';\nimport { useSystem } from '@ohif/core';\n\nfunction DicomMicroscopyViewport({\n  activeViewportId,\n  setViewportActive,\n  displaySets,\n  viewportId,\n  dataSource,\n  resizeRef,\n}: {\n  activeViewportId: string;\n  setViewportActive: Function;\n  displaySets: any[];\n  viewportId: string;\n  dataSource: any;\n  resizeRef: any;\n}) {\n  const { servicesManager, extensionManager } = useSystem();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [viewer, setViewer] = useState(null);\n  const [managedViewer, setManagedViewer] = useState(null);\n  const overlayElement = useRef();\n  const container = useRef();\n  const { microscopyService, customizationService } = servicesManager.services;\n\n  const overlayData = customizationService.getCustomization('microscopyViewport.overlay');\n\n  // install the microscopy renderer into the web page.\n  // you should only do this once.\n  const installOpenLayersRenderer = useCallback(\n    async (container, displaySet) => {\n      const loadViewer = async metadata => {\n        const dicomMicroscopyModule = await microscopyService.importDicomMicroscopyViewer();\n        const { viewer: DicomMicroscopyViewer, metadata: metadataUtils } = dicomMicroscopyModule;\n\n        const microscopyViewer = DicomMicroscopyViewer.VolumeImageViewer;\n\n        const client = getDicomWebClient({\n          extensionManager,\n          servicesManager,\n        });\n\n        // Parse, format, and filter metadata\n        const volumeImages: any[] = [];\n\n        /**\n         * This block of code is the original way of loading DICOM into dicom-microscopy-viewer\n         * as in their documentation.\n         * But we have the metadata already loaded by our loaders.\n         * As the metadata for microscopy DIOM files tends to be big and we don't\n         * want to double load it, below we have the mechanism to reconstruct the\n         * DICOM JSON structure (denaturalized) from naturalized metadata.\n         * (NOTE: Our loaders cache only naturalized metadata, not the denaturalized.)\n         */\n        // {\n        //   const retrieveOptions = {\n        //     studyInstanceUID: metadata[0].StudyInstanceUID,\n        //     seriesInstanceUID: metadata[0].SeriesInstanceUID,\n        //   };\n        //   metadata = await client.retrieveSeriesMetadata(retrieveOptions);\n        //   // Parse, format, and filter metadata\n        //   metadata.forEach(m => {\n        //     if (\n        //       volumeImages.length > 0 &&\n        //       m['00200052'].Value[0] != volumeImages[0].FrameOfReferenceUID\n        //     ) {\n        //       console.warn(\n        //         'Expected FrameOfReferenceUID of difference instances within a series to be the same, found multiple different values',\n        //         m['00200052'].Value[0]\n        //       );\n        //       m['00200052'].Value[0] = volumeImages[0].FrameOfReferenceUID;\n        //     }\n        //     NOTE: depending on different data source, image.ImageType sometimes\n        //     is a string, not a string array.\n        //     m['00080008'] = transformImageTypeUnnaturalized(m['00080008']);\n\n        //     const image = new metadataUtils.VLWholeSlideMicroscopyImage({\n        //       metadata: m,\n        //     });\n        //     const imageFlavor = image.ImageType[2];\n        //     if (imageFlavor === 'VOLUME' || imageFlavor === 'THUMBNAIL') {\n        //       volumeImages.push(image);\n        //     }\n        //   });\n        // }\n\n        metadata.forEach(m => {\n          // NOTE: depending on different data source, image.ImageType sometimes\n          //    is a string, not a string array.\n          m.ImageType = typeof m.ImageType === 'string' ? m.ImageType.split('\\\\') : m.ImageType;\n\n          const inst = cleanDenaturalizedDataset(\n            dcmjs.data.DicomMetaDictionary.denaturalizeDataset(m),\n            {\n              StudyInstanceUID: m.StudyInstanceUID,\n              SeriesInstanceUID: m.SeriesInstanceUID,\n              dataSourceConfig: dataSource.getConfig(),\n            }\n          );\n          if (!inst['00480105']) {\n            // Optical Path Sequence, no OpticalPathIdentifier?\n            // NOTE: this is actually a not-well formatted DICOM VL Whole Slide Microscopy Image.\n            inst['00480105'] = {\n              vr: 'SQ',\n              Value: [\n                {\n                  '00480106': {\n                    vr: 'SH',\n                    Value: ['1'],\n                  },\n                },\n              ],\n            };\n          }\n          const image = new metadataUtils.VLWholeSlideMicroscopyImage({\n            metadata: inst,\n          });\n\n          const imageFlavor = image.ImageType[2];\n          if (imageFlavor === 'VOLUME' || imageFlavor === 'THUMBNAIL') {\n            volumeImages.push(image);\n          }\n        });\n\n        // format metadata for microscopy-viewer\n        const options = {\n          client,\n          metadata: volumeImages,\n          retrieveRendered: false,\n          controls: ['overview', 'position'],\n        };\n\n        const viewer = new microscopyViewer(options);\n\n        if (overlayElement && overlayElement.current && viewer.addViewportOverlay) {\n          viewer.addViewportOverlay({\n            element: overlayElement.current,\n            coordinates: [0, 0], // TODO: dicom-microscopy-viewer documentation says this can be false to be automatically, but it is not.\n            navigate: true,\n            className: 'OpenLayersOverlay',\n          });\n        }\n\n        viewer.render({ container });\n\n        const { StudyInstanceUID, SeriesInstanceUID } = displaySet;\n\n        const managedViewer = microscopyService.addViewer(\n          viewer,\n          viewportId,\n          container,\n          StudyInstanceUID,\n          SeriesInstanceUID\n        );\n\n        managedViewer.addContextMenuCallback((event: Event) => {\n          // TODO: refactor this after Bill's changes on ContextMenu feature get merged\n          // const roiAnnotationNearBy = this.getNearbyROI(event);\n        });\n\n        setViewer(viewer);\n        setManagedViewer(managedViewer);\n      };\n\n      microscopyService.clearAnnotations();\n\n      let smDisplaySet = displaySet;\n      if (displaySet.Modality === 'SR') {\n        // for SR displaySet, let's load the actual image displaySet\n        smDisplaySet = displaySet.getSourceDisplaySet();\n      }\n      console.log('Loading viewer metadata', smDisplaySet);\n\n      await loadViewer(smDisplaySet.others);\n\n      if (displaySet.Modality === 'SR') {\n        displaySet.load(smDisplaySet);\n      }\n    },\n    [dataSource, extensionManager, microscopyService, servicesManager, viewportId]\n  );\n\n  useEffect(() => {\n    const displaySet = displaySets[0];\n    installOpenLayersRenderer(container.current, displaySet).then(() => {\n      setIsLoaded(true);\n    });\n\n    return () => {\n      if (viewer) {\n        microscopyService.removeViewer(viewer);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const displaySet = displaySets[0];\n\n    microscopyService.clearAnnotations();\n\n    // loading SR\n    if (displaySet.Modality === 'SR') {\n      const referencedDisplaySet = displaySet.getSourceDisplaySet();\n      displaySet.load(referencedDisplaySet);\n    }\n  }, [managedViewer, displaySets, microscopyService]);\n\n  const style = { width: '100%', height: '100%' };\n  const displaySet = displaySets[0];\n  const firstInstance = displaySet.firstInstance || displaySet.instance;\n  const LoadingIndicatorProgress = customizationService.getCustomization(\n    'ui.loadingIndicatorProgress'\n  );\n\n  return (\n    <div\n      className={'DicomMicroscopyViewer'}\n      style={style}\n      onClick={() => {\n        if (viewportId !== activeViewportId) {\n          setViewportActive(viewportId);\n        }\n      }}\n    >\n      <div style={{ ...style, display: 'none' }}>\n        <div style={{ ...style }} ref={overlayElement}>\n          <div style={{ position: 'relative', height: '100%', width: '100%' }}>\n            {displaySet && firstInstance.imageId && (\n              <ViewportOverlay\n                overlayData={overlayData}\n                displaySet={displaySet}\n                instance={displaySet.instance}\n                metadata={displaySet.metadata}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n      <div\n        style={style}\n        ref={(ref: any) => {\n          container.current = ref;\n          resizeRef.current = ref;\n        }}\n      />\n      {isLoaded ? null : <LoadingIndicatorProgress className={'h-full w-full bg-black'} />}\n    </div>\n  );\n}\n\nexport default DicomMicroscopyViewport;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].use[2]!./ViewportOverlay.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","import React from 'react';\nimport classnames from 'classnames';\n\nimport listComponentGenerator from './listComponentGenerator';\nimport './ViewportOverlay.css';\nimport { formatDICOMDate, formatDICOMTime, formatNumberPrecision } from './utils';\nimport { utils } from '@ohif/core';\n\nconst { formatPN } = utils;\n\ninterface OverlayItem {\n  id: string;\n  title: string;\n  value?: (props: any) => string;\n  condition?: (props: any) => boolean;\n  contents?: (props: any) => { className: string; value: any };\n  generator?: (props: any) => any;\n}\n\n/**\n *\n * @param {*} config is a configuration object that defines four lists of elements,\n * one topLeft, topRight, bottomLeft, bottomRight contents.\n * @param {*} extensionManager is used to load the image data.\n * @returns\n */\nexport const generateFromConfig = ({ config, overlayData, ...props }) => {\n  const {\n    topLeft = [],\n    topRight = [],\n    bottomLeft = [],\n    bottomRight = [],\n  }: {\n    topLeft?: OverlayItem[];\n    topRight?: OverlayItem[];\n    bottomLeft?: OverlayItem[];\n    bottomRight?: OverlayItem[];\n  } = overlayData ?? {};\n  const topLeftClass = 'top-viewport left-viewport text-primary-light';\n  const topRightClass = 'top-viewport right-viewport-scrollbar text-primary-light';\n  const bottomRightClass = 'bottom-viewport right-viewport-scrollbar text-primary-light';\n  const bottomLeftClass = 'bottom-viewport left-viewport text-primary-light';\n  const overlay = 'absolute pointer-events-none microscopy-viewport-overlay';\n\n  return (\n    <>\n      {topLeft && topLeft.length > 0 && (\n        <div data-cy={'viewport-overlay-top-left'} className={classnames(overlay, topLeftClass)}>\n          {listComponentGenerator({ ...props, list: topLeft, itemGenerator })}\n        </div>\n      )}\n      {topRight && topRight.length > 0 && (\n        <div data-cy={'viewport-overlay-top-right'} className={classnames(overlay, topRightClass)}>\n          {listComponentGenerator({\n            ...props,\n            list: topRight,\n            itemGenerator,\n          })}\n        </div>\n      )}\n      {bottomRight && bottomRight.length > 0 && (\n        <div\n          data-cy={'viewport-overlay-bottom-right'}\n          className={classnames(overlay, bottomRightClass)}\n        >\n          {listComponentGenerator({\n            ...props,\n            list: bottomRight,\n            itemGenerator,\n          })}\n        </div>\n      )}\n      {bottomLeft && bottomLeft.length > 0 && (\n        <div\n          data-cy={'viewport-overlay-bottom-left'}\n          className={classnames(overlay, bottomLeftClass)}\n        >\n          {listComponentGenerator({\n            ...props,\n            list: bottomLeft,\n            itemGenerator,\n          })}\n        </div>\n      )}\n    </>\n  );\n};\n\nconst itemGenerator = (props: any) => {\n  const { item } = props;\n  const { title, value: valueFunc, condition, contents } = item;\n  props.image = { ...props.image, ...props.metadata };\n  props.formatDate = formatDICOMDate;\n  props.formatTime = formatDICOMTime;\n  props.formatPN = formatPN;\n  props.formatNumberPrecision = formatNumberPrecision;\n  if (condition && !condition(props)) {\n    return null;\n  }\n  if (!contents && !valueFunc) {\n    return null;\n  }\n  const value = valueFunc && valueFunc(props);\n  const contentsValue = (contents && contents(props)) || [\n    { className: 'mr-1', value: title },\n    { classname: 'mr-1 font-light', value },\n  ];\n\n  return (\n    <div key={item.id} className=\"flex flex-row\">\n      {contentsValue.map((content, idx) => (\n        <span key={idx} className={content.className}>\n          {content.value}\n        </span>\n      ))}\n    </div>\n  );\n};\n\nexport default generateFromConfig;\n","const listComponentGenerator = props => {\n  const { list, itemGenerator } = props;\n  if (!list) {\n    return;\n  }\n  return list.map(item => {\n    if (!item) {\n      return;\n    }\n    const generator = item.generator || itemGenerator;\n    if (!generator) {\n      throw new Error(`No generator for ${item}`);\n    }\n    return generator({ ...props, item });\n  });\n};\n\nexport default listComponentGenerator;\n","import moment from 'moment';\nimport * as cornerstone from '@cornerstonejs/core';\n\n/**\n * Checks if value is valid.\n *\n * @param {number} value\n * @returns {boolean} is valid.\n */\nexport function isValidNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n\n/**\n * Formats number precision.\n *\n * @param {number} number\n * @param {number} precision\n * @returns {number} formatted number.\n */\nexport function formatNumberPrecision(number, precision) {\n  if (number !== null) {\n    return parseFloat(number).toFixed(precision);\n  }\n}\n\n/**\n * Formats DICOM date.\n *\n * @param {string} date\n * @param {string} strFormat\n * @returns {string} formatted date.\n */\nexport function formatDICOMDate(date, strFormat = 'MMM D, YYYY') {\n  return moment(date, 'YYYYMMDD').format(strFormat);\n}\n\n/**\n *    DICOM Time is stored as HHmmss.SSS, where:\n *      HH 24 hour time:\n *        m mm        0..59   Minutes\n *        s ss        0..59   Seconds\n *        S SS SSS    0..999  Fractional seconds\n *\n *        Goal: '24:12:12'\n *\n * @param {*} time\n * @param {string} strFormat\n * @returns {string} formatted name.\n */\nexport function formatDICOMTime(time, strFormat = 'HH:mm:ss') {\n  return moment(time, 'HH:mm:ss').format(strFormat);\n}\n\n/**\n * Gets compression type\n *\n * @param {number} imageId\n * @returns {string} compression type.\n */\nexport function getCompression(imageId) {\n  const generalImageModule = cornerstone.metaData.get('generalImageModule', imageId) || {};\n  const { lossyImageCompression, lossyImageCompressionRatio, lossyImageCompressionMethod } =\n    generalImageModule;\n\n  if (lossyImageCompression === '01' && lossyImageCompressionRatio !== '') {\n    const compressionMethod = lossyImageCompressionMethod || 'Lossy: ';\n    const compressionRatio = formatNumberPrecision(lossyImageCompressionRatio, 2);\n    return compressionMethod + compressionRatio + ' : 1';\n  }\n\n  return 'Lossless / Uncompressed';\n}\n","import { errorHandler, DicomMetadataStore } from '@ohif/core';\nimport { StaticWadoClient } from '@ohif/extension-default';\n\n/**\n * create a DICOMwebClient object to be used by Dicom Microscopy Viewer\n *\n * Referenced the code from `/extensions/default/src/DicomWebDataSource/index.js`\n *\n * @param param0\n * @returns\n */\nexport default function getDicomWebClient({ extensionManager, servicesManager }: withAppTypes) {\n  const dataSourceConfig = window.config.dataSources.find(\n    ds => ds.sourceName === extensionManager.activeDataSourceName\n  );\n  const { userAuthenticationService } = servicesManager.services;\n\n  const { wadoRoot, staticWado, singlepart } = dataSourceConfig.configuration;\n\n  const wadoConfig = {\n    url: wadoRoot || '/dicomlocal',\n    staticWado,\n    singlepart,\n    headers: userAuthenticationService.getAuthorizationHeader(),\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\n  };\n\n  const client = new StaticWadoClient(wadoConfig);\n  client.wadoURL = wadoConfig.url;\n\n  if (extensionManager.activeDataSourceName === 'dicomlocal') {\n    /**\n     * For local data source, override the retrieveInstanceFrames() method of the\n     * dicomweb-client to retrieve image data from memory cached metadata.\n     * Other methods of the client doesn't matter, as we are feeding the DMV\n     * with the series metadata already.\n     *\n     * @param {Object} options\n     * @param {String} options.studyInstanceUID - Study Instance UID\n     * @param {String} options.seriesInstanceUID - Series Instance UID\n     * @param {String} options.sopInstanceUID - SOP Instance UID\n     * @param {String} options.frameNumbers - One-based indices of Frame Items\n     * @param {Object} [options.queryParams] - HTTP query parameters\n     * @returns {ArrayBuffer[]} Rendered Frame Items as byte arrays\n     */\n    //\n    client.retrieveInstanceFrames = async options => {\n      if (!('studyInstanceUID' in options)) {\n        throw new Error('Study Instance UID is required for retrieval of instance frames');\n      }\n      if (!('seriesInstanceUID' in options)) {\n        throw new Error('Series Instance UID is required for retrieval of instance frames');\n      }\n      if (!('sopInstanceUID' in options)) {\n        throw new Error('SOP Instance UID is required for retrieval of instance frames');\n      }\n      if (!('frameNumbers' in options)) {\n        throw new Error('frame numbers are required for retrieval of instance frames');\n      }\n      console.log(\n        `retrieve frames ${options.frameNumbers.toString()} of instance ${options.sopInstanceUID}`\n      );\n\n      const instance = DicomMetadataStore.getInstance(\n        options.studyInstanceUID,\n        options.seriesInstanceUID,\n        options.sopInstanceUID\n      );\n\n      const frameNumbers = Array.isArray(options.frameNumbers)\n        ? options.frameNumbers\n        : options.frameNumbers.split(',');\n\n      return frameNumbers.map(fr =>\n        Array.isArray(instance.PixelData) ? instance.PixelData[+fr - 1] : instance.PixelData\n      );\n    };\n  }\n\n  return client;\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.DicomMicroscopyViewer {\n  --ol-partial-background-color: rgba(127, 127, 127, 0.7);\n  --ol-foreground-color: #000000;\n  --ol-subtle-foreground-color: #000;\n  --ol-subtle-background-color: rgba(78, 78, 78, 0.5);\n  \n  /* Prevent text selection on the entire viewer to avoid interference with annotations */\n  -webkit-user-select: none;\n  -moz-user-select: none;\n   -ms-user-select: none;\n       user-select: none;\n}\n\n.DicomMicroscopyViewer .ol-box {\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  border-radius: 2px;\n  border: 1.5px solid var(--ol-background-color);\n  background-color: var(--ol-partial-background-color);\n}\n\n.DicomMicroscopyViewer .ol-mouse-position {\n  top: 8px;\n  right: 8px;\n  position: absolute;\n}\n\n.DicomMicroscopyViewer .ol-scale-line {\n  background: var(--ol-partial-background-color);\n  border-radius: 4px;\n  bottom: 8px;\n  left: 8px;\n  padding: 2px;\n  position: absolute;\n}\n\n.DicomMicroscopyViewer .ol-scale-line-inner {\n  border: 1px solid var(--ol-subtle-foreground-color);\n  border-top: none;\n  color: var(--ol-foreground-color);\n  font-size: 10px;\n  text-align: center;\n  margin: 1px;\n  will-change: contents, width;\n  -webkit-transition: all 0.25s;\n  transition: all 0.25s;\n}\n\n.DicomMicroscopyViewer .ol-scale-bar {\n  position: absolute;\n  bottom: 8px;\n  left: 8px;\n}\n\n.DicomMicroscopyViewer .ol-scale-bar-inner {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n}\n\n.DicomMicroscopyViewer .ol-scale-step-marker {\n  width: 1px;\n  height: 15px;\n  background-color: var(--ol-foreground-color);\n  float: right;\n  z-index: 10;\n}\n\n.DicomMicroscopyViewer .ol-scale-step-text {\n  position: absolute;\n  bottom: -5px;\n  font-size: 10px;\n  z-index: 11;\n  color: var(--ol-foreground-color);\n  text-shadow:\n    -1.5px 0 var(--ol-partial-background-color),\n    0 1.5px var(--ol-partial-background-color),\n    1.5px 0 var(--ol-partial-background-color),\n    0 -1.5px var(--ol-partial-background-color);\n}\n\n.DicomMicroscopyViewer .ol-scale-text {\n  position: absolute;\n  font-size: 12px;\n  text-align: center;\n  bottom: 25px;\n  color: var(--ol-foreground-color);\n  text-shadow:\n    -1.5px 0 var(--ol-partial-background-color),\n    0 1.5px var(--ol-partial-background-color),\n    1.5px 0 var(--ol-partial-background-color),\n    0 -1.5px var(--ol-partial-background-color);\n}\n\n.DicomMicroscopyViewer .ol-scale-singlebar {\n  position: relative;\n  height: 10px;\n  z-index: 9;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  border: 1px solid var(--ol-foreground-color);\n}\n\n.DicomMicroscopyViewer .ol-scale-singlebar-even {\n  background-color: var(--ol-subtle-foreground-color);\n}\n\n.DicomMicroscopyViewer .ol-scale-singlebar-odd {\n  background-color: var(--ol-background-color);\n}\n\n.DicomMicroscopyViewer .ol-unsupported {\n  display: none;\n}\n\n.DicomMicroscopyViewer .ol-viewport,\n.DicomMicroscopyViewer .ol-unselectable {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n   -ms-user-select: none;\n       user-select: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\n.DicomMicroscopyViewer .ol-viewport canvas {\n  all: unset;\n}\n\n.DicomMicroscopyViewer .ol-selectable {\n  -webkit-touch-callout: default;\n  -webkit-user-select: text;\n  -moz-user-select: text;\n   -ms-user-select: text;\n       user-select: text;\n}\n\n.DicomMicroscopyViewer .ol-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n.DicomMicroscopyViewer .ol-grab {\n  cursor: move;\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n.DicomMicroscopyViewer .ol-control {\n  position: absolute;\n  background-color: var(--ol-subtle-background-color);\n  border-radius: 4px;\n}\n\n.DicomMicroscopyViewer .ol-zoom {\n  top: 0.5em;\n  left: 0.5em;\n}\n\n.DicomMicroscopyViewer .ol-rotate {\n  top: 0.5em;\n  right: 0.5em;\n  -webkit-transition:\n    opacity 0.25s linear,\n    visibility 0s linear;\n  transition:\n    opacity 0.25s linear,\n    visibility 0s linear;\n}\n\n.DicomMicroscopyViewer .ol-rotate.ol-hidden {\n  opacity: 0;\n  visibility: hidden;\n  -webkit-transition:\n    opacity 0.25s linear,\n    visibility 0s linear 0.25s;\n  transition:\n    opacity 0.25s linear,\n    visibility 0s linear 0.25s;\n}\n\n.DicomMicroscopyViewer .ol-zoom-extent {\n  top: 4.643em;\n  left: 0.5em;\n}\n\n.DicomMicroscopyViewer .ol-full-screen {\n  right: 0.5em;\n  top: 0.5em;\n}\n\n.DicomMicroscopyViewer .ol-control button {\n  display: block;\n  margin: 1px;\n  padding: 0;\n  color: var(--ol-subtle-foreground-color);\n  font-weight: bold;\n  text-decoration: none;\n  font-size: inherit;\n  text-align: center;\n  height: 1.375em;\n  width: 1.375em;\n  line-height: 0.4em;\n  background-color: var(--ol-background-color);\n  border: none;\n  border-radius: 2px;\n}\n\n.DicomMicroscopyViewer .ol-control button::-moz-focus-inner {\n  border: none;\n  padding: 0;\n}\n\n.DicomMicroscopyViewer .ol-zoom-extent button {\n  line-height: 1.4em;\n}\n\n.DicomMicroscopyViewer .ol-compass {\n  display: block;\n  font-weight: normal;\n  will-change: transform;\n}\n\n.DicomMicroscopyViewer .ol-touch .ol-control button {\n  font-size: 1.5em;\n}\n\n.DicomMicroscopyViewer .ol-touch .ol-zoom-extent {\n  top: 5.5em;\n}\n\n.DicomMicroscopyViewer .ol-control button:hover,\n.DicomMicroscopyViewer .ol-control button:focus {\n  text-decoration: none;\n  outline: 1px solid var(--ol-subtle-foreground-color);\n  color: var(--ol-foreground-color);\n}\n\n.DicomMicroscopyViewer .ol-zoom .ol-zoom-in {\n  border-radius: 2px 2px 0 0;\n}\n\n.DicomMicroscopyViewer .ol-zoom .ol-zoom-out {\n  border-radius: 0 0 2px 2px;\n}\n\n.DicomMicroscopyViewer .ol-attribution {\n  text-align: right;\n  bottom: 0.5em;\n  right: 0.5em;\n  max-width: calc(100% - 1.3em);\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: reverse;\n      -ms-flex-flow: row-reverse;\n          flex-flow: row-reverse;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n\n.DicomMicroscopyViewer .ol-attribution a {\n  color: var(--ol-subtle-foreground-color);\n  text-decoration: none;\n}\n\n.DicomMicroscopyViewer .ol-attribution ul {\n  margin: 0;\n  padding: 1px 0.5em;\n  color: var(--ol-foreground-color);\n  text-shadow: 0 0 2px var(--ol-background-color);\n  font-size: 12px;\n}\n\n.DicomMicroscopyViewer .ol-attribution li {\n  display: inline;\n  list-style: none;\n}\n\n.DicomMicroscopyViewer .ol-attribution li:not(:last-child):after {\n  content: ' ';\n}\n\n.DicomMicroscopyViewer .ol-attribution img {\n  max-height: 2em;\n  max-width: inherit;\n  vertical-align: middle;\n}\n\n.DicomMicroscopyViewer .ol-attribution button {\n  -ms-flex-negative: 0;\n      flex-shrink: 0;\n}\n\n.DicomMicroscopyViewer .ol-attribution.ol-collapsed ul {\n  display: none;\n}\n\n.DicomMicroscopyViewer .ol-attribution:not(.ol-collapsed) {\n  background: var(--ol-partial-background-color);\n}\n\n.DicomMicroscopyViewer .ol-attribution.ol-uncollapsible {\n  bottom: 0;\n  right: 0;\n  border-radius: 4px 0 0;\n}\n\n.DicomMicroscopyViewer .ol-attribution.ol-uncollapsible img {\n  margin-top: -0.2em;\n  max-height: 1.6em;\n}\n\n.DicomMicroscopyViewer .ol-attribution.ol-uncollapsible button {\n  display: none;\n}\n\n.DicomMicroscopyViewer .ol-zoomslider {\n  top: 4.5em;\n  left: 0.5em;\n  height: 200px;\n}\n\n.DicomMicroscopyViewer .ol-zoomslider button {\n  position: relative;\n  height: 10px;\n}\n\n.DicomMicroscopyViewer .ol-touch .ol-zoomslider {\n  top: 5.5em;\n}\n\n.DicomMicroscopyViewer .ol-overviewmap {\n  left: 0.5em;\n  bottom: 0.5em;\n}\n\n.DicomMicroscopyViewer .ol-overviewmap.ol-uncollapsible {\n  bottom: 0;\n  left: 0;\n  border-radius: 0 4px 0 0;\n}\n\n.DicomMicroscopyViewer .ol-overviewmap .ol-overviewmap-map,\n.DicomMicroscopyViewer .ol-overviewmap button {\n  display: block;\n}\n\n.DicomMicroscopyViewer .ol-overviewmap .ol-overviewmap-map {\n  border: 1px solid var(--ol-subtle-foreground-color);\n  height: 150px;\n  width: 150px;\n}\n\n.DicomMicroscopyViewer .ol-overviewmap:not(.ol-collapsed) button {\n  bottom: 0;\n  left: 0;\n  position: absolute;\n}\n\n.DicomMicroscopyViewer .ol-overviewmap.ol-collapsed .ol-overviewmap-map,\n.DicomMicroscopyViewer .ol-overviewmap.ol-uncollapsible button {\n  display: none;\n}\n\n.DicomMicroscopyViewer .ol-overviewmap:not(.ol-collapsed) {\n  background: var(--ol-subtle-background-color);\n}\n\n.DicomMicroscopyViewer .ol-overviewmap-box {\n  border: 0.5px dotted var(--ol-subtle-foreground-color);\n}\n\n.DicomMicroscopyViewer .ol-overviewmap .ol-overviewmap-box:hover {\n  cursor: move;\n}\n\n@layout-header-background: #007ea3;\n\n@primary-color: #007ea3;\n\n@processing-color: #8cb8c6;\n\n@success-color: #3f9c35;\n\n@warning-color: #eeaf30;\n\n@error-color: #96172e;\n\n@font-size-base: 14px;\n\n.DicomMicroscopyViewer .ol-tooltip {\n  font-size: 16px !important;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../../../extensions/dicom-microscopy/src/DicomMicroscopyViewport.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\".DicomMicroscopyViewer {\\n  --ol-partial-background-color: rgba(127, 127, 127, 0.7);\\n  --ol-foreground-color: #000000;\\n  --ol-subtle-foreground-color: #000;\\n  --ol-subtle-background-color: rgba(78, 78, 78, 0.5);\\n  \\n  /* Prevent text selection on the entire viewer to avoid interference with annotations */\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n\\n.DicomMicroscopyViewer .ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 1.5px solid var(--ol-background-color);\\n  background-color: var(--ol-partial-background-color);\\n}\\n\\n.DicomMicroscopyViewer .ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.DicomMicroscopyViewer .ol-scale-line {\\n  background: var(--ol-partial-background-color);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n\\n.DicomMicroscopyViewer .ol-scale-line-inner {\\n  border: 1px solid var(--ol-subtle-foreground-color);\\n  border-top: none;\\n  color: var(--ol-foreground-color);\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n\\n.DicomMicroscopyViewer .ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n\\n.DicomMicroscopyViewer .ol-scale-bar-inner {\\n  display: flex;\\n}\\n\\n.DicomMicroscopyViewer .ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: var(--ol-foreground-color);\\n  float: right;\\n  z-index: 10;\\n}\\n\\n.DicomMicroscopyViewer .ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 10px;\\n  z-index: 11;\\n  color: var(--ol-foreground-color);\\n  text-shadow:\\n    -1.5px 0 var(--ol-partial-background-color),\\n    0 1.5px var(--ol-partial-background-color),\\n    1.5px 0 var(--ol-partial-background-color),\\n    0 -1.5px var(--ol-partial-background-color);\\n}\\n\\n.DicomMicroscopyViewer .ol-scale-text {\\n  position: absolute;\\n  font-size: 12px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: var(--ol-foreground-color);\\n  text-shadow:\\n    -1.5px 0 var(--ol-partial-background-color),\\n    0 1.5px var(--ol-partial-background-color),\\n    1.5px 0 var(--ol-partial-background-color),\\n    0 -1.5px var(--ol-partial-background-color);\\n}\\n\\n.DicomMicroscopyViewer .ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-index: 9;\\n  box-sizing: border-box;\\n  border: 1px solid var(--ol-foreground-color);\\n}\\n\\n.DicomMicroscopyViewer .ol-scale-singlebar-even {\\n  background-color: var(--ol-subtle-foreground-color);\\n}\\n\\n.DicomMicroscopyViewer .ol-scale-singlebar-odd {\\n  background-color: var(--ol-background-color);\\n}\\n\\n.DicomMicroscopyViewer .ol-unsupported {\\n  display: none;\\n}\\n\\n.DicomMicroscopyViewer .ol-viewport,\\n.DicomMicroscopyViewer .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: transparent;\\n}\\n\\n.DicomMicroscopyViewer .ol-viewport canvas {\\n  all: unset;\\n}\\n\\n.DicomMicroscopyViewer .ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  user-select: text;\\n}\\n\\n.DicomMicroscopyViewer .ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n\\n.DicomMicroscopyViewer .ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n\\n.DicomMicroscopyViewer .ol-control {\\n  position: absolute;\\n  background-color: var(--ol-subtle-background-color);\\n  border-radius: 4px;\\n}\\n\\n.DicomMicroscopyViewer .ol-zoom {\\n  top: 0.5em;\\n  left: 0.5em;\\n}\\n\\n.DicomMicroscopyViewer .ol-rotate {\\n  top: 0.5em;\\n  right: 0.5em;\\n  transition:\\n    opacity 0.25s linear,\\n    visibility 0s linear;\\n}\\n\\n.DicomMicroscopyViewer .ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition:\\n    opacity 0.25s linear,\\n    visibility 0s linear 0.25s;\\n}\\n\\n.DicomMicroscopyViewer .ol-zoom-extent {\\n  top: 4.643em;\\n  left: 0.5em;\\n}\\n\\n.DicomMicroscopyViewer .ol-full-screen {\\n  right: 0.5em;\\n  top: 0.5em;\\n}\\n\\n.DicomMicroscopyViewer .ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: var(--ol-subtle-foreground-color);\\n  font-weight: bold;\\n  text-decoration: none;\\n  font-size: inherit;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: 0.4em;\\n  background-color: var(--ol-background-color);\\n  border: none;\\n  border-radius: 2px;\\n}\\n\\n.DicomMicroscopyViewer .ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n\\n.DicomMicroscopyViewer .ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n\\n.DicomMicroscopyViewer .ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  will-change: transform;\\n}\\n\\n.DicomMicroscopyViewer .ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n\\n.DicomMicroscopyViewer .ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n\\n.DicomMicroscopyViewer .ol-control button:hover,\\n.DicomMicroscopyViewer .ol-control button:focus {\\n  text-decoration: none;\\n  outline: 1px solid var(--ol-subtle-foreground-color);\\n  color: var(--ol-foreground-color);\\n}\\n\\n.DicomMicroscopyViewer .ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n\\n.DicomMicroscopyViewer .ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n.DicomMicroscopyViewer .ol-attribution {\\n  text-align: right;\\n  bottom: 0.5em;\\n  right: 0.5em;\\n  max-width: calc(100% - 1.3em);\\n  display: flex;\\n  flex-flow: row-reverse;\\n  align-items: center;\\n}\\n\\n.DicomMicroscopyViewer .ol-attribution a {\\n  color: var(--ol-subtle-foreground-color);\\n  text-decoration: none;\\n}\\n\\n.DicomMicroscopyViewer .ol-attribution ul {\\n  margin: 0;\\n  padding: 1px 0.5em;\\n  color: var(--ol-foreground-color);\\n  text-shadow: 0 0 2px var(--ol-background-color);\\n  font-size: 12px;\\n}\\n\\n.DicomMicroscopyViewer .ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n}\\n\\n.DicomMicroscopyViewer .ol-attribution li:not(:last-child):after {\\n  content: ' ';\\n}\\n\\n.DicomMicroscopyViewer .ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n\\n.DicomMicroscopyViewer .ol-attribution button {\\n  flex-shrink: 0;\\n}\\n\\n.DicomMicroscopyViewer .ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n\\n.DicomMicroscopyViewer .ol-attribution:not(.ol-collapsed) {\\n  background: var(--ol-partial-background-color);\\n}\\n\\n.DicomMicroscopyViewer .ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n}\\n\\n.DicomMicroscopyViewer .ol-attribution.ol-uncollapsible img {\\n  margin-top: -0.2em;\\n  max-height: 1.6em;\\n}\\n\\n.DicomMicroscopyViewer .ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.DicomMicroscopyViewer .ol-zoomslider {\\n  top: 4.5em;\\n  left: 0.5em;\\n  height: 200px;\\n}\\n\\n.DicomMicroscopyViewer .ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.DicomMicroscopyViewer .ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.DicomMicroscopyViewer .ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n\\n.DicomMicroscopyViewer .ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n\\n.DicomMicroscopyViewer .ol-overviewmap .ol-overviewmap-map,\\n.DicomMicroscopyViewer .ol-overviewmap button {\\n  display: block;\\n}\\n\\n.DicomMicroscopyViewer .ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid var(--ol-subtle-foreground-color);\\n  height: 150px;\\n  width: 150px;\\n}\\n\\n.DicomMicroscopyViewer .ol-overviewmap:not(.ol-collapsed) button {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n}\\n\\n.DicomMicroscopyViewer .ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.DicomMicroscopyViewer .ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.DicomMicroscopyViewer .ol-overviewmap:not(.ol-collapsed) {\\n  background: var(--ol-subtle-background-color);\\n}\\n\\n.DicomMicroscopyViewer .ol-overviewmap-box {\\n  border: 0.5px dotted var(--ol-subtle-foreground-color);\\n}\\n\\n.DicomMicroscopyViewer .ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\\n@layout-header-background: #007ea3;\\n@primary-color: #007ea3;\\n@processing-color: #8cb8c6;\\n@success-color: #3f9c35;\\n@warning-color: #eeaf30;\\n@error-color: #96172e;\\n@font-size-base: 14px;\\n\\n.DicomMicroscopyViewer .ol-tooltip {\\n  font-size: 16px !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.DicomMicroscopyViewer .OpenLayersOverlay {\n  height: 100%;\n  width: 100%;\n  display: block !important;\n  pointer-events: none !important;\n}\n\n.DicomMicroscopyViewer .text-primary-light {\n  font-size: 14px;\n  color: yellow;\n  font-weight: normal;\n}\n\n.DicomMicroscopyViewer .text-primary-light span {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: 300px;\n  /* text-shadow: 0px 1px 1px rgba(225, 225, 225, 0.6),\n              0px 1px 1px rgba(225, 225, 225, 0.6),\n              1px 1px 3px rgba(225, 225, 225, 0.9),\n              1px 1px 3px rgba(225, 225, 225, 0.9),\n              1px 1px 3px rgba(225, 225, 225, 0.9),\n              1px 1px 3px rgba(225, 225, 225, 0.9); */\n}\n\n.DicomMicroscopyViewer .absolute {\n  position: absolute;\n}\n\n.DicomMicroscopyViewer .flex {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n}\n\n.DicomMicroscopyViewer .flex-row {\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n}\n\n.DicomMicroscopyViewer .flex-col {\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n\n.DicomMicroscopyViewer .pointer-events-none {\n  pointer-events: none;\n}\n\n.DicomMicroscopyViewer .left-viewport-scrollbar {\n  left: 0.5rem;\n}\n\n.DicomMicroscopyViewer .right-viewport-scrollbar {\n  right: 1.3rem;\n}\n\n.DicomMicroscopyViewer .top-viewport {\n  top: 0.5rem;\n}\n\n.DicomMicroscopyViewer .bottom-viewport {\n  bottom: 0.5rem;\n}\n\n.DicomMicroscopyViewer .bottom-viewport.left-viewport {\n  bottom: 0.5rem;\n  left: calc(0.5rem + 250px);\n}\n\n.DicomMicroscopyViewer .right-viewport-scrollbar .flex {\n  -webkit-box-pack: end;\n      -ms-flex-pack: end;\n          justify-content: end;\n}\n\n.DicomMicroscopyViewer .microscopy-viewport-overlay {\n  padding: 0.5rem 1rem;\n  background: rgba(0, 0, 0, 0.5);\n  max-width: 40%;\n}\n\n.DicomMicroscopyViewer .microscopy-viewport-overlay .flex {\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.DicomMicroscopyViewer .top-viewport .flex span:not(.font-light) {\n  -ms-flex-negative: 0;\n      flex-shrink: 0;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../../../extensions/dicom-microscopy/src/components/ViewportOverlay/ViewportOverlay.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,YAAY;EACZ,WAAW;EACX,yBAAyB;EACzB,+BAA+B;AACjC;;AAEA;EACE,eAAe;EACf,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,uBAAuB;EACvB,gBAAgB;EAChB;;;;;qDAKmD;AACrD;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;AACf;;AAEA;EACE,8BAAmB;EAAnB,6BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;AACrB;;AAEA;EACE,4BAAsB;EAAtB,6BAAsB;MAAtB,0BAAsB;UAAtB,sBAAsB;AACxB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,0BAA0B;AAC5B;;AAEA;EACE,qBAAoB;MAApB,kBAAoB;UAApB,oBAAoB;AACtB;;AAEA;EACE,oBAAoB;EACpB,8BAA8B;EAC9B,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,oBAAc;MAAd,cAAc;AAChB\",\"sourcesContent\":[\".DicomMicroscopyViewer .OpenLayersOverlay {\\n  height: 100%;\\n  width: 100%;\\n  display: block !important;\\n  pointer-events: none !important;\\n}\\n\\n.DicomMicroscopyViewer .text-primary-light {\\n  font-size: 14px;\\n  color: yellow;\\n  font-weight: normal;\\n}\\n\\n.DicomMicroscopyViewer .text-primary-light span {\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  max-width: 300px;\\n  /* text-shadow: 0px 1px 1px rgba(225, 225, 225, 0.6),\\n              0px 1px 1px rgba(225, 225, 225, 0.6),\\n              1px 1px 3px rgba(225, 225, 225, 0.9),\\n              1px 1px 3px rgba(225, 225, 225, 0.9),\\n              1px 1px 3px rgba(225, 225, 225, 0.9),\\n              1px 1px 3px rgba(225, 225, 225, 0.9); */\\n}\\n\\n.DicomMicroscopyViewer .absolute {\\n  position: absolute;\\n}\\n\\n.DicomMicroscopyViewer .flex {\\n  display: flex;\\n}\\n\\n.DicomMicroscopyViewer .flex-row {\\n  flex-direction: row;\\n}\\n\\n.DicomMicroscopyViewer .flex-col {\\n  flex-direction: column;\\n}\\n\\n.DicomMicroscopyViewer .pointer-events-none {\\n  pointer-events: none;\\n}\\n\\n.DicomMicroscopyViewer .left-viewport-scrollbar {\\n  left: 0.5rem;\\n}\\n\\n.DicomMicroscopyViewer .right-viewport-scrollbar {\\n  right: 1.3rem;\\n}\\n\\n.DicomMicroscopyViewer .top-viewport {\\n  top: 0.5rem;\\n}\\n\\n.DicomMicroscopyViewer .bottom-viewport {\\n  bottom: 0.5rem;\\n}\\n\\n.DicomMicroscopyViewer .bottom-viewport.left-viewport {\\n  bottom: 0.5rem;\\n  left: calc(0.5rem + 250px);\\n}\\n\\n.DicomMicroscopyViewer .right-viewport-scrollbar .flex {\\n  justify-content: end;\\n}\\n\\n.DicomMicroscopyViewer .microscopy-viewport-overlay {\\n  padding: 0.5rem 1rem;\\n  background: rgba(0, 0, 0, 0.5);\\n  max-width: 40%;\\n}\\n\\n.DicomMicroscopyViewer .microscopy-viewport-overlay .flex {\\n  max-width: 100%;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.DicomMicroscopyViewer .top-viewport .flex span:not(.font-light) {\\n  flex-shrink: 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":[],"sourceRoot":""}