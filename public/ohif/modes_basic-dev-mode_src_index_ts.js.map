{"version":3,"file":"modes_basic-dev-mode_src_index_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9KA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sources":["file:////home/balasakthi/Downloads/Viewers-master/modes/basic-dev-mode/src/id.js","file:////home/balasakthi/Downloads/Viewers-master/modes/basic-dev-mode/src/index.ts","file:////home/balasakthi/Downloads/Viewers-master/modes/basic-dev-mode/src/toolbarButtons.ts"],"sourcesContent":["import packageJson from '../package.json';\n\nconst id = packageJson.name;\n\nexport { id };\n","import toolbarButtons from './toolbarButtons';\nimport { hotkeys } from '@ohif/core';\nimport { id } from './id';\nimport i18n from 'i18next';\n\nconst configs = {\n  Length: {},\n  //\n};\n\nconst ohif = {\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\n  measurements: '@ohif/extension-cornerstone.panelModule.panelMeasurement',\n  thumbnailList: '@ohif/extension-default.panelModule.seriesList',\n};\n\nconst cs3d = {\n  viewport: '@ohif/extension-cornerstone.viewportModule.cornerstone',\n};\n\nconst dicomsr = {\n  sopClassHandler: '@ohif/extension-cornerstone-dicom-sr.sopClassHandlerModule.dicom-sr',\n  viewport: '@ohif/extension-cornerstone-dicom-sr.viewportModule.dicom-sr',\n};\n\nconst dicomvideo = {\n  sopClassHandler: '@ohif/extension-dicom-video.sopClassHandlerModule.dicom-video',\n  viewport: '@ohif/extension-dicom-video.viewportModule.dicom-video',\n};\n\nconst dicompdf = {\n  sopClassHandler: '@ohif/extension-dicom-pdf.sopClassHandlerModule.dicom-pdf',\n  viewport: '@ohif/extension-dicom-pdf.viewportModule.dicom-pdf',\n};\n\nconst extensionDependencies = {\n  '@ohif/extension-default': '^3.0.0',\n  '@ohif/extension-cornerstone': '^3.0.0',\n  '@ohif/extension-cornerstone-dicom-sr': '^3.0.0',\n  '@ohif/extension-dicom-pdf': '^3.0.1',\n  '@ohif/extension-dicom-video': '^3.0.1',\n};\n\nfunction modeFactory({ modeConfiguration }) {\n  return {\n    id,\n    routeName: 'dev',\n    displayName: i18n.t('Modes:Basic Dev Viewer'),\n    /**\n     * Lifecycle hooks\n     */\n    onModeEnter: ({ servicesManager, extensionManager }: withAppTypes) => {\n      const { toolbarService, toolGroupService } = servicesManager.services;\n      const utilityModule = extensionManager.getModuleEntry(\n        '@ohif/extension-cornerstone.utilityModule.tools'\n      );\n\n      const { toolNames, Enums } = utilityModule.exports;\n\n      const tools = {\n        active: [\n          {\n            toolName: toolNames.WindowLevel,\n            bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\n          },\n          {\n            toolName: toolNames.Pan,\n            bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\n          },\n          {\n            toolName: toolNames.Zoom,\n            bindings: [{ mouseButton: Enums.MouseBindings.Secondary }, { numTouchPoints: 2 }],\n          },\n          {\n            toolName: toolNames.StackScroll,\n            bindings: [{ mouseButton: Enums.MouseBindings.Wheel }, { numTouchPoints: 3 }],\n          },\n        ],\n        passive: [\n          { toolName: toolNames.Length },\n          { toolName: toolNames.Bidirectional },\n          { toolName: toolNames.Probe },\n          { toolName: toolNames.EllipticalROI },\n          { toolName: toolNames.CircleROI },\n          { toolName: toolNames.RectangleROI },\n          { toolName: toolNames.StackScroll },\n          { toolName: toolNames.CalibrationLine },\n        ],\n        // enabled\n        enabled: [{ toolName: toolNames.ImageOverlayViewer }],\n        // disabled\n      };\n\n      toolGroupService.createToolGroupAndAddTools('default', tools);\n\n      toolbarService.register(toolbarButtons);\n      toolbarService.updateSection('primary', [\n        'MeasurementTools',\n        'Zoom',\n        'WindowLevel',\n        'Pan',\n        'Layout',\n        'MoreTools',\n      ]);\n    },\n    onModeExit: ({ servicesManager }: withAppTypes) => {\n      const { toolGroupService, uiDialogService, uiModalService } = servicesManager.services;\n      uiDialogService.hideAll();\n      uiModalService.hide();\n      toolGroupService.destroy();\n    },\n    validationTags: {\n      study: [],\n      series: [],\n    },\n    isValidMode: ({ modalities }) => {\n      const modalities_list = modalities.split('\\\\');\n\n      // Slide Microscopy modality not supported by basic mode yet\n      return {\n        valid: !modalities_list.includes('SM'),\n        description: 'The mode does not support the following modalities: SM',\n      };\n    },\n    routes: [\n      {\n        path: 'viewer-cs3d',\n        /*init: ({ servicesManager, extensionManager }) => {\n          //defaultViewerRouteInit\n        },*/\n        layoutTemplate: ({ location, servicesManager }) => {\n          return {\n            id: ohif.layout,\n            props: {\n              // TODO: Should be optional, or required to pass empty array for slots?\n              leftPanels: [ohif.thumbnailList],\n              leftPanelResizable: true,\n              rightPanels: [ohif.measurements],\n              rightPanelResizable: true,\n              viewports: [\n                {\n                  namespace: cs3d.viewport,\n                  displaySetsToDisplay: [ohif.sopClassHandler],\n                },\n                {\n                  namespace: dicomvideo.viewport,\n                  displaySetsToDisplay: [dicomvideo.sopClassHandler],\n                },\n                {\n                  namespace: dicompdf.viewport,\n                  displaySetsToDisplay: [dicompdf.sopClassHandler],\n                },\n              ],\n            },\n          };\n        },\n      },\n    ],\n    extensions: extensionDependencies,\n    hangingProtocol: 'default',\n    sopClassHandlers: [\n      dicomvideo.sopClassHandler,\n      ohif.sopClassHandler,\n      dicompdf.sopClassHandler,\n      dicomsr.sopClassHandler,\n    ],\n  };\n}\n\nconst mode = {\n  id,\n  modeFactory,\n  extensionDependencies,\n};\n\nexport default mode;\n","import type { Button } from '@ohif/core/types';\n\nexport const setToolActiveToolbar = {\n  commandName: 'setToolActive',\n  commandOptions: {\n    toolGroupIds: ['default', 'mpr'],\n  },\n  context: 'CORNERSTONE',\n};\n\nconst toolbarButtons: Button[] = [\n  // sections\n  {\n    id: 'MeasurementTools',\n    uiType: 'ohif.toolButtonList',\n    props: {\n      buttonSection: true,\n    },\n  },\n  {\n    id: 'MoreTools',\n    uiType: 'ohif.toolButtonList',\n    props: {\n      buttonSection: true,\n    },\n  },\n\n  // tool defs\n  {\n    id: 'Length',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-length',\n      label: 'Length',\n      tooltip: 'Length Tool',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: {\n          ...setToolActiveToolbar.commandOptions,\n          toolName: 'Length',\n        },\n      },\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'Bidirectional',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-bidirectional',\n      label: 'Bidirectional',\n      tooltip: 'Bidirectional Tool',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: {\n          ...setToolActiveToolbar.commandOptions,\n          toolName: 'Bidirectional',\n        },\n      },\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'EllipticalROI',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-ellipse',\n      label: 'Ellipse',\n      tooltip: 'Ellipse ROI',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: {\n          ...setToolActiveToolbar.commandOptions,\n          toolName: 'EllipticalROI',\n        },\n      },\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'CircleROI',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-circle',\n      label: 'Circle',\n      tooltip: 'Circle Tool',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: {\n          ...setToolActiveToolbar.commandOptions,\n          toolName: 'CircleROI',\n        },\n      },\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'Zoom',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-zoom',\n      label: 'Zoom',\n      tooltip: 'Zoom',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: {\n          ...setToolActiveToolbar.commandOptions,\n          toolName: 'Zoom',\n        },\n      },\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'Pan',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-move',\n      label: 'Pan',\n      tooltip: 'Pan',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: {\n          ...setToolActiveToolbar.commandOptions,\n          toolName: 'Pan',\n        },\n      },\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'Capture',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-capture',\n      label: 'Capture',\n      tooltip: 'Capture',\n      commands: 'showDownloadViewportModal',\n      evaluate: [\n        'evaluate.action',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['video', 'wholeSlide'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'Layout',\n    uiType: 'ohif.layoutSelector',\n    props: {\n      rows: 3,\n      columns: 4,\n      evaluate: 'evaluate.action',\n      commands: 'setViewportGridLayout',\n    },\n  },\n\n  {\n    id: 'Reset',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-reset',\n      label: 'Reset View',\n      tooltip: 'Reset View',\n      commands: 'resetViewport',\n      evaluate: 'evaluate.action',\n    },\n  },\n  {\n    id: 'RotateRight',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-rotate-right',\n      label: 'Rotate Right',\n      tooltip: 'Rotate Right +90',\n      commands: 'rotateViewportCW',\n      evaluate: 'evaluate.action',\n    },\n  },\n  {\n    id: 'FlipHorizontal',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-flip-horizontal',\n      label: 'Flip Horizontally',\n      tooltip: 'Flip Horizontally',\n      commands: 'flipViewportHorizontal',\n      evaluate: 'evaluate.action',\n    },\n  },\n  {\n    id: 'StackScroll',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-stack-scroll',\n      label: 'Stack Scroll',\n      tooltip: 'Stack Scroll',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: {\n          ...setToolActiveToolbar.commandOptions,\n          toolName: 'StackScroll',\n        },\n      },\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'Invert',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-invert',\n      label: 'Invert Colors',\n      tooltip: 'Invert Colors',\n      commands: 'invertViewport',\n      evaluate: 'evaluate.action',\n    },\n  },\n  {\n    id: 'CalibrationLine',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-calibration',\n      label: 'Calibration Line',\n      tooltip: 'Calibration Line',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: {\n          ...setToolActiveToolbar.commandOptions,\n          toolName: 'CalibrationLine',\n        },\n      },\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n];\n\nexport default toolbarButtons;\n"],"names":[],"sourceRoot":""}