{"version":3,"file":"modes_usAnnotation_src_index_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;AAEA;AACA;AAEA;AACA;AAYA;AAKA;AAIA;AAQA;AAMA;AAIA;AAYA;AAsBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9XA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzTA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA","sources":["file:////home/balasakthi/Downloads/Viewers-master/modes/usAnnotation/src/id.js","file:////home/balasakthi/Downloads/Viewers-master/modes/usAnnotation/src/index.ts","file:////home/balasakthi/Downloads/Viewers-master/modes/usAnnotation/src/initToolGroups.js","file:////home/balasakthi/Downloads/Viewers-master/modes/usAnnotation/src/toolbarButtons.ts"],"sourcesContent":["import packageJson from '../package.json';\n\nconst id = packageJson.name;\n\nexport { id };\n","import i18n from 'i18next';\nimport { id } from './id';\nimport initToolGroups from './initToolGroups';\nimport toolbarButtons from './toolbarButtons';\nimport { UltrasoundPleuraBLineTool } from '@cornerstonejs/tools';\n\nconst ohif = {\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\n  thumbnailList: '@ohif/extension-default.panelModule.seriesList',\n  wsiSopClassHandler:\n    '@ohif/extension-cornerstone.sopClassHandlerModule.DicomMicroscopySopClassHandler',\n};\n\nconst cornerstone = {\n  measurements: '@ohif/extension-cornerstone.panelModule.panelMeasurement',\n  segmentation: '@ohif/extension-cornerstone.panelModule.panelSegmentation',\n};\n\nconst tracked = {\n  measurements: '@ohif/extension-measurement-tracking.panelModule.trackedMeasurements',\n  thumbnailList: '@ohif/extension-measurement-tracking.panelModule.seriesList',\n  viewport: '@ohif/extension-measurement-tracking.viewportModule.cornerstone-tracked',\n};\n\nconst dicomsr = {\n  sopClassHandler: '@ohif/extension-cornerstone-dicom-sr.sopClassHandlerModule.dicom-sr',\n  sopClassHandler3D: '@ohif/extension-cornerstone-dicom-sr.sopClassHandlerModule.dicom-sr-3d',\n  viewport: '@ohif/extension-cornerstone-dicom-sr.viewportModule.dicom-sr',\n};\n\nconst dicomvideo = {\n  sopClassHandler: '@ohif/extension-dicom-video.sopClassHandlerModule.dicom-video',\n  viewport: '@ohif/extension-dicom-video.viewportModule.dicom-video',\n};\n\nconst dicompdf = {\n  sopClassHandler: '@ohif/extension-dicom-pdf.sopClassHandlerModule.dicom-pdf',\n  viewport: '@ohif/extension-dicom-pdf.viewportModule.dicom-pdf',\n};\n\nconst dicomSeg = {\n  sopClassHandler: '@ohif/extension-cornerstone-dicom-seg.sopClassHandlerModule.dicom-seg',\n  viewport: '@ohif/extension-cornerstone-dicom-seg.viewportModule.dicom-seg',\n};\n\nconst dicomPmap = {\n  sopClassHandler: '@ohif/extension-cornerstone-dicom-pmap.sopClassHandlerModule.dicom-pmap',\n  viewport: '@ohif/extension-cornerstone-dicom-pmap.viewportModule.dicom-pmap',\n};\n\nconst dicomRT = {\n  viewport: '@ohif/extension-cornerstone-dicom-rt.viewportModule.dicom-rt',\n  sopClassHandler: '@ohif/extension-cornerstone-dicom-rt.sopClassHandlerModule.dicom-rt',\n};\n\nconst usAnnotation = {\n  panel: '@ohif/extension-ultrasound-pleura-bline.panelModule.USAnnotationPanel',\n};\n\nlet settingsSaved = {};\nconst extensionDependencies = {\n  // Can derive the versions at least process.env.from npm_package_version\n  '@ohif/extension-default': '^3.0.0',\n  '@ohif/extension-cornerstone': '^3.0.0',\n  '@ohif/extension-measurement-tracking': '^3.0.0',\n  '@ohif/extension-cornerstone-dicom-sr': '^3.0.0',\n  '@ohif/extension-cornerstone-dicom-seg': '^3.0.0',\n  '@ohif/extension-cornerstone-dicom-pmap': '^3.0.0',\n  '@ohif/extension-cornerstone-dicom-rt': '^3.0.0',\n  '@ohif/extension-dicom-pdf': '^3.0.1',\n  '@ohif/extension-dicom-video': '^3.0.1',\n  '@ohif/extension-ultrasound-pleura-bline': '^3.0.0',\n};\n\nfunction modeFactory({ modeConfiguration }) {\n  let _activatePanelTriggersSubscriptions = [];\n  return {\n    // TODO: We're using this as a route segment\n    // We should not be.\n    id,\n    routeName: 'usAnnotation',\n    displayName: i18n.t('US Pleura B-line Annotations'),\n    /**\n     * Lifecycle hooks\n     */\n    onModeEnter: function ({\n      servicesManager,\n      extensionManager,\n      commandsManager,\n      appConfig,\n    }: withAppTypes) {\n      settingsSaved = {\n        disableConfirmationPrompts: appConfig?.disableConfirmationPrompts,\n        measurementTrackingMode: appConfig?.measurementTrackingMode,\n      };\n      appConfig.disableConfirmationPrompts = true;\n      appConfig.measurementTrackingMode = 'simplified';\n      const { measurementService, toolbarService, toolGroupService, customizationService } =\n        servicesManager.services;\n\n      measurementService.clearMeasurements();\n\n      // Init Default and SR ToolGroups\n      initToolGroups(extensionManager, toolGroupService, commandsManager);\n\n      toolbarService.register(toolbarButtons);\n      toolbarService.updateSection(toolbarService.sections.primary, [\n        'MeasurementTools',\n        'Zoom',\n        'Pan',\n        'TrackballRotate',\n        'WindowLevel',\n        'Capture',\n        'Layout',\n        'Crosshairs',\n        'MoreTools',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.topLeft, [\n        'orientationMenu',\n        'dataOverlayMenu',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.bottomMiddle, [\n        'AdvancedRenderingControls',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.advancedRenderingControlsSection, [\n        'windowLevelMenuEmbedded',\n        'voiManualControlMenu',\n        'Colorbar',\n        'opacityMenu',\n        'thresholdMenu',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.topRight, [\n        'modalityLoadBadge',\n        'trackingStatus',\n        'navigationComponent',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.bottomLeft, [\n        'windowLevelMenu',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.measurementSection, [\n        'Length',\n        'Bidirectional',\n        'ArrowAnnotate',\n        'EllipticalROI',\n        'RectangleROI',\n        'CircleROI',\n        'PlanarFreehandROI',\n        'SplineROI',\n        'LivewireContour',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.moreToolsSection, [\n        'Reset',\n        'rotate-right',\n        'flipHorizontal',\n        'ImageSliceSync',\n        'ReferenceLines',\n        'ImageOverlayViewer',\n        'StackScroll',\n        'invert',\n        'Probe',\n        'Cine',\n        'Angle',\n        'CobbAngle',\n        'Magnify',\n        'CalibrationLine',\n        'TagBrowser',\n        'AdvancedMagnify',\n        'UltrasoundDirectionalTool',\n        'UltrasoundPleuraBLineTool',\n        'WindowLevelRegion',\n      ]);\n\n      customizationService.setCustomizations(\n        {\n          'panelSegmentation.disableEditing': {\n            $set: true,\n          },\n          autoCineModalities: {\n            $set: [],\n          },\n          'ohif.hotkeyBindings': {\n            $push: [\n              {\n                commandName: 'switchUSAnnotationToPleuraLine',\n                label: 'Add new pleura line',\n                keys: ['W'],\n              },\n              {\n                commandName: 'switchUSAnnotationToBLine',\n                label: 'Add new B-line',\n                keys: ['S'],\n              },\n              {\n                commandName: 'deleteLastPleuraAnnotation',\n                label: 'Delete last pleura line',\n                keys: ['E'],\n              },\n              {\n                commandName: 'deleteLastBLineAnnotation',\n                label: 'Delete last B-line',\n                keys: ['D'],\n              },\n              {\n                commandName: 'toggleDisplayFanAnnotation',\n                label: 'Toggle overlay',\n                keys: ['O'],\n              },\n            ],\n          },\n          measurementsContextMenu: {\n            inheritsFrom: 'ohif.contextMenu',\n            menus: [\n              // Get the items from the UI Customization for the menu name (and have a custom name)\n              {\n                id: 'forExistingMeasurement',\n                selector: ({ nearbyToolData }) => !!nearbyToolData,\n                items: [\n                  {\n                    label: 'Delete annotation',\n                    commands: 'removeMeasurement',\n                  },\n                ],\n              },\n            ],\n          },\n          'viewportOverlay.topLeft': [\n            {\n              id: 'BLinePleuraPercentage',\n              inheritsFrom: 'ohif.overlayItem',\n              label: '',\n              title: 'BLinePleuraPercentage',\n              condition: ({ referenceInstance }) => referenceInstance?.Modality.includes('US'),\n              contentF: () => {\n                const { viewportGridService, toolGroupService, cornerstoneViewportService } =\n                  servicesManager.services;\n                const activeViewportId = viewportGridService.getActiveViewportId();\n                const toolGroup = toolGroupService.getToolGroupForViewport(activeViewportId);\n                if (!toolGroup) {\n                  return 'B-Line/Pleura : N/A';\n                }\n                const usAnnotation = toolGroup.getToolInstance(UltrasoundPleuraBLineTool.toolName);\n                if (usAnnotation) {\n                  const viewport =\n                    cornerstoneViewportService.getCornerstoneViewport(activeViewportId);\n                  const percentage = usAnnotation.calculateBLinePleuraPercentage(viewport);\n                  if (percentage !== undefined) {\n                    return `B-Line/Pleura : ${percentage.toFixed(2)} %`;\n                  } else {\n                    return 'B-Line/Pleura : N/A';\n                  }\n                }\n                return 'B-Line/Pleura : N/A';\n              },\n            },\n          ],\n        },\n        'mode'\n      );\n    },\n    onModeExit: ({ servicesManager }: withAppTypes) => {\n      appConfig.disableConfirmationPrompts = settingsSaved.disableConfirmationPrompts;\n      appConfig.measurementTrackingMode = settingsSaved.measurementTrackingMode;\n\n      const {\n        toolGroupService,\n        syncGroupService,\n        segmentationService,\n        cornerstoneViewportService,\n        uiDialogService,\n        uiModalService,\n      } = servicesManager.services;\n\n      _activatePanelTriggersSubscriptions.forEach(sub => sub.unsubscribe());\n      _activatePanelTriggersSubscriptions = [];\n\n      uiDialogService.hideAll();\n      uiModalService.hide();\n      toolGroupService.destroy();\n      syncGroupService.destroy();\n      segmentationService.destroy();\n      cornerstoneViewportService.destroy();\n    },\n    validationTags: {\n      study: [],\n      series: [],\n    },\n\n    isValidMode: function ({ modalities }) {\n      const modalities_list = modalities.split('\\\\');\n\n      return {\n        valid: modalities_list.includes('US'),\n        description: 'Pleura b-lines annotation mode when the study involves US modality series',\n      };\n    },\n    routes: [\n      {\n        path: 'longitudinal',\n        /*init: ({ servicesManager, extensionManager }) => {\n          //defaultViewerRouteInit\n        },*/\n        layoutTemplate: () => {\n          return {\n            id: ohif.layout,\n            props: {\n              leftPanels: [tracked.thumbnailList],\n              leftPanelResizable: true,\n              rightPanels: [usAnnotation.panel, cornerstone.segmentation, tracked.measurements],\n              rightPanelResizable: true,\n              viewports: [\n                {\n                  namespace: tracked.viewport,\n                  displaySetsToDisplay: [\n                    ohif.sopClassHandler,\n                    dicomvideo.sopClassHandler,\n                    dicomsr.sopClassHandler3D,\n                    ohif.wsiSopClassHandler,\n                  ],\n                },\n                {\n                  namespace: dicomsr.viewport,\n                  displaySetsToDisplay: [dicomsr.sopClassHandler],\n                },\n                {\n                  namespace: dicompdf.viewport,\n                  displaySetsToDisplay: [dicompdf.sopClassHandler],\n                },\n                {\n                  namespace: dicomSeg.viewport,\n                  displaySetsToDisplay: [dicomSeg.sopClassHandler],\n                },\n                {\n                  namespace: dicomPmap.viewport,\n                  displaySetsToDisplay: [dicomPmap.sopClassHandler],\n                },\n                {\n                  namespace: dicomRT.viewport,\n                  displaySetsToDisplay: [dicomRT.sopClassHandler],\n                },\n              ],\n            },\n          };\n        },\n      },\n    ],\n    extensions: extensionDependencies,\n    // Default protocol gets self-registered by default in the init\n    hangingProtocol: 'default',\n    // Order is important in sop class handlers when two handlers both use\n    // the same sop class under different situations.  In that case, the more\n    // general handler needs to come last.  For this case, the dicomvideo must\n    // come first to remove video transfer syntax before ohif uses images\n    sopClassHandlers: [\n      dicomvideo.sopClassHandler,\n      dicomSeg.sopClassHandler,\n      dicomPmap.sopClassHandler,\n      ohif.sopClassHandler,\n      ohif.wsiSopClassHandler,\n      dicompdf.sopClassHandler,\n      dicomsr.sopClassHandler3D,\n      dicomsr.sopClassHandler,\n      dicomRT.sopClassHandler,\n    ],\n    ...modeConfiguration,\n  };\n}\n\nconst mode = {\n  id,\n  modeFactory,\n  extensionDependencies,\n};\n\nexport default mode;\nexport { initToolGroups, toolbarButtons };\n","import { toolNames as SRToolNames } from '@ohif/extension-cornerstone-dicom-sr';\n\nconst colours = {\n  'viewport-0': 'rgb(200, 0, 0)',\n  'viewport-1': 'rgb(200, 200, 0)',\n  'viewport-2': 'rgb(0, 200, 0)',\n};\n\nconst colorsByOrientation = {\n  axial: 'rgb(200, 0, 0)',\n  sagittal: 'rgb(200, 200, 0)',\n  coronal: 'rgb(0, 200, 0)',\n};\n\nfunction initDefaultToolGroup(extensionManager, toolGroupService, commandsManager, toolGroupId) {\n  const utilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.tools'\n  );\n\n  const { toolNames, Enums } = utilityModule.exports;\n\n  const tools = {\n    active: [\n      {\n        toolName: toolNames.UltrasoundAnnotation,\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\n      },\n      {\n        toolName: toolNames.Pan,\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\n      },\n      {\n        toolName: toolNames.Zoom,\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\n      },\n      {\n        toolName: toolNames.StackScroll,\n        bindings: [{ mouseButton: Enums.MouseBindings.Wheel }],\n      },\n    ],\n    passive: [\n      { toolName: toolNames.Length },\n      {\n        toolName: toolNames.ArrowAnnotate,\n        configuration: {\n          getTextCallback: (callback, eventDetails) => {\n            commandsManager.runCommand('arrowTextCallback', {\n              callback,\n              eventDetails,\n            });\n          },\n          changeTextCallback: (data, eventDetails, callback) => {\n            commandsManager.runCommand('arrowTextCallback', {\n              callback,\n              data,\n              eventDetails,\n            });\n          },\n        },\n      },\n      {\n        toolName: toolNames.SegmentBidirectional,\n      },\n      { toolName: toolNames.Bidirectional },\n      { toolName: toolNames.DragProbe },\n      { toolName: toolNames.Probe },\n      { toolName: toolNames.EllipticalROI },\n      { toolName: toolNames.CircleROI },\n      { toolName: toolNames.RectangleROI },\n      { toolName: toolNames.StackScroll },\n      { toolName: toolNames.Angle },\n      { toolName: toolNames.CobbAngle },\n      { toolName: toolNames.Magnify },\n      { toolName: toolNames.CalibrationLine },\n      {\n        toolName: toolNames.PlanarFreehandContourSegmentation,\n        configuration: {\n          displayOnePointAsCrosshairs: true,\n        },\n      },\n      { toolName: toolNames.UltrasoundDirectional },\n      { toolName: toolNames.WindowLevel },\n      { toolName: toolNames.PlanarFreehandROI },\n      { toolName: toolNames.SplineROI },\n      { toolName: toolNames.LivewireContour },\n      { toolName: toolNames.WindowLevelRegion },\n    ],\n    enabled: [\n      { toolName: toolNames.ImageOverlayViewer },\n      { toolName: toolNames.ReferenceLines },\n      {\n        toolName: SRToolNames.SRSCOORD3DPoint,\n      },\n    ],\n    disabled: [\n      {\n        toolName: toolNames.AdvancedMagnify,\n      },\n    ],\n  };\n\n  toolGroupService.createToolGroupAndAddTools(toolGroupId, tools);\n}\n\nfunction initSRToolGroup(extensionManager, toolGroupService) {\n  const SRUtilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone-dicom-sr.utilityModule.tools'\n  );\n\n  if (!SRUtilityModule) {\n    return;\n  }\n\n  const CS3DUtilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.tools'\n  );\n\n  const { toolNames: SRToolNames } = SRUtilityModule.exports;\n  const { toolNames, Enums } = CS3DUtilityModule.exports;\n  const tools = {\n    active: [\n      {\n        toolName: toolNames.WindowLevel,\n        bindings: [\n          {\n            mouseButton: Enums.MouseBindings.Primary,\n          },\n        ],\n      },\n      {\n        toolName: toolNames.Pan,\n        bindings: [\n          {\n            mouseButton: Enums.MouseBindings.Auxiliary,\n          },\n        ],\n      },\n      {\n        toolName: toolNames.Zoom,\n        bindings: [\n          {\n            mouseButton: Enums.MouseBindings.Secondary,\n          },\n        ],\n      },\n      {\n        toolName: toolNames.StackScroll,\n        bindings: [{ mouseButton: Enums.MouseBindings.Wheel }],\n      },\n    ],\n    passive: [\n      { toolName: SRToolNames.SRLength },\n      { toolName: SRToolNames.SRArrowAnnotate },\n      { toolName: SRToolNames.SRBidirectional },\n      { toolName: SRToolNames.SREllipticalROI },\n      { toolName: SRToolNames.SRCircleROI },\n      { toolName: SRToolNames.SRPlanarFreehandROI },\n      { toolName: SRToolNames.SRRectangleROI },\n      { toolName: toolNames.WindowLevelRegion },\n    ],\n    enabled: [\n      {\n        toolName: SRToolNames.DICOMSRDisplay,\n      },\n    ],\n    // disabled\n  };\n\n  const toolGroupId = 'SRToolGroup';\n  toolGroupService.createToolGroupAndAddTools(toolGroupId, tools);\n}\n\nfunction initMPRToolGroup(extensionManager, toolGroupService, commandsManager) {\n  const utilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.tools'\n  );\n\n  const serviceManager = extensionManager._servicesManager;\n  const { cornerstoneViewportService } = serviceManager.services;\n\n  const { toolNames, Enums } = utilityModule.exports;\n\n  const tools = {\n    active: [\n      {\n        toolName: toolNames.WindowLevel,\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\n      },\n      {\n        toolName: toolNames.Pan,\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\n      },\n      {\n        toolName: toolNames.Zoom,\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\n      },\n      {\n        toolName: toolNames.StackScroll,\n        bindings: [{ mouseButton: Enums.MouseBindings.Wheel }],\n      },\n    ],\n    passive: [\n      { toolName: toolNames.Length },\n      {\n        toolName: toolNames.ArrowAnnotate,\n        configuration: {\n          getTextCallback: (callback, eventDetails) => {\n            commandsManager.runCommand('arrowTextCallback', {\n              callback,\n              eventDetails,\n            });\n          },\n          changeTextCallback: (data, eventDetails, callback) => {\n            commandsManager.runCommand('arrowTextCallback', {\n              callback,\n              data,\n              eventDetails,\n            });\n          },\n        },\n      },\n      { toolName: toolNames.Bidirectional },\n      { toolName: toolNames.DragProbe },\n      { toolName: toolNames.Probe },\n      { toolName: toolNames.EllipticalROI },\n      { toolName: toolNames.CircleROI },\n      { toolName: toolNames.RectangleROI },\n      { toolName: toolNames.StackScroll },\n      { toolName: toolNames.Angle },\n      { toolName: toolNames.CobbAngle },\n      { toolName: toolNames.PlanarFreehandROI },\n      { toolName: toolNames.SplineROI },\n      { toolName: toolNames.LivewireContour },\n      { toolName: toolNames.WindowLevelRegion },\n      {\n        toolName: toolNames.PlanarFreehandContourSegmentation,\n        configuration: {\n          displayOnePointAsCrosshairs: true,\n        },\n      },\n    ],\n    disabled: [\n      {\n        toolName: toolNames.Crosshairs,\n        configuration: {\n          viewportIndicators: true,\n          viewportIndicatorsConfig: {\n            circleRadius: 5,\n            xOffset: 0.95,\n            yOffset: 0.05,\n          },\n          disableOnPassive: true,\n          autoPan: {\n            enabled: false,\n            panSize: 10,\n          },\n          getReferenceLineColor: viewportId => {\n            const viewportInfo = cornerstoneViewportService.getViewportInfo(viewportId);\n            const viewportOptions = viewportInfo?.viewportOptions;\n            if (viewportOptions) {\n              return (\n                colours[viewportOptions.id] ||\n                colorsByOrientation[viewportOptions.orientation] ||\n                '#0c0'\n              );\n            } else {\n              console.warn('missing viewport?', viewportId);\n              return '#0c0';\n            }\n          },\n        },\n      },\n      {\n        toolName: toolNames.AdvancedMagnify,\n      },\n      { toolName: toolNames.ReferenceLines },\n    ],\n  };\n\n  toolGroupService.createToolGroupAndAddTools('mpr', tools);\n}\nfunction initVolume3DToolGroup(extensionManager, toolGroupService) {\n  const utilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.tools'\n  );\n\n  const { toolNames, Enums } = utilityModule.exports;\n\n  const tools = {\n    active: [\n      {\n        toolName: toolNames.TrackballRotateTool,\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\n      },\n      {\n        toolName: toolNames.Zoom,\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\n      },\n      {\n        toolName: toolNames.Pan,\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\n      },\n    ],\n  };\n\n  toolGroupService.createToolGroupAndAddTools('volume3d', tools);\n}\n\nfunction initToolGroups(extensionManager, toolGroupService, commandsManager) {\n  initDefaultToolGroup(extensionManager, toolGroupService, commandsManager, 'default');\n  initSRToolGroup(extensionManager, toolGroupService);\n  initMPRToolGroup(extensionManager, toolGroupService, commandsManager);\n  initVolume3DToolGroup(extensionManager, toolGroupService);\n}\n\nexport default initToolGroups;\n","import type { Button } from '@ohif/core/types';\n\nimport { EVENTS } from '@cornerstonejs/core';\nimport { ViewportGridService } from '@ohif/core';\n\nconst callbacks = (toolName: string) => [\n  {\n    commandName: 'setViewportForToolConfiguration',\n    commandOptions: {\n      toolName,\n    },\n  },\n];\n\nexport const setToolActiveToolbar = {\n  commandName: 'setToolActiveToolbar',\n  commandOptions: {\n    toolGroupIds: ['default', 'mpr', 'SRToolGroup', 'volume3d'],\n  },\n};\n\nconst toolbarButtons: Button[] = [\n  // sections\n  {\n    id: 'MeasurementTools',\n    uiType: 'ohif.toolButtonList',\n    props: {\n      buttonSection: 'measurementSection',\n    },\n  },\n  {\n    id: 'MoreTools',\n    uiType: 'ohif.toolButtonList',\n    props: {\n      buttonSection: 'moreToolsSection',\n    },\n  },\n  {\n    id: 'AdvancedRenderingControls',\n    uiType: 'ohif.advancedRenderingControls',\n    props: {\n      buttonSection: 'advancedRenderingControlsSection',\n    },\n  },\n  // tool defs\n  {\n    id: 'modalityLoadBadge',\n    uiType: 'ohif.modalityLoadBadge',\n    props: {\n      icon: 'Status',\n      label: 'Status',\n      tooltip: 'Status',\n      evaluate: {\n        name: 'evaluate.modalityLoadBadge',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'navigationComponent',\n    uiType: 'ohif.navigationComponent',\n    props: {\n      icon: 'Navigation',\n      label: 'Navigation',\n      tooltip: 'Navigate between segments/measurements and manage their visibility',\n      evaluate: {\n        name: 'evaluate.navigationComponent',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'trackingStatus',\n    uiType: 'ohif.trackingStatus',\n    props: {\n      icon: 'TrackingStatus',\n      label: 'Tracking Status',\n      tooltip: 'View and manage tracking status of measurements and annotations',\n      evaluate: {\n        name: 'evaluate.trackingStatus',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'dataOverlayMenu',\n    uiType: 'ohif.dataOverlayMenu',\n    props: {\n      icon: 'ViewportViews',\n      label: 'Data Overlay',\n      tooltip: 'Configure data overlay options and manage foreground/background display sets',\n      evaluate: 'evaluate.dataOverlayMenu',\n    },\n  },\n  {\n    id: 'orientationMenu',\n    uiType: 'ohif.orientationMenu',\n    props: {\n      icon: 'OrientationSwitch',\n      label: 'Orientation',\n      tooltip: 'Change viewport orientation between axial, sagittal, coronal and reformat planes',\n      evaluate: {\n        name: 'evaluate.orientationMenu',\n        // hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'windowLevelMenuEmbedded',\n    uiType: 'ohif.windowLevelMenuEmbedded',\n    props: {\n      icon: 'WindowLevel',\n      label: 'Window Level',\n      tooltip: 'Adjust window/level presets and customize image contrast settings',\n      evaluate: {\n        name: 'evaluate.windowLevelMenuEmbedded',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'windowLevelMenu',\n    uiType: 'ohif.windowLevelMenu',\n    props: {\n      icon: 'WindowLevel',\n      label: 'Window Level',\n      tooltip: 'Adjust window/level presets and customize image contrast settings',\n      evaluate: {\n        name: 'evaluate.windowLevelMenu',\n      },\n    },\n  },\n  {\n    id: 'voiManualControlMenu',\n    uiType: 'ohif.voiManualControlMenu',\n    props: {\n      icon: 'WindowLevelAdvanced',\n      label: 'Advanced Window Level',\n      tooltip: 'Advanced window/level settings with manual controls and presets',\n      evaluate: 'evaluate.voiManualControlMenu',\n    },\n  },\n  {\n    id: 'thresholdMenu',\n    uiType: 'ohif.thresholdMenu',\n    props: {\n      icon: 'Threshold',\n      label: 'Threshold',\n      tooltip: 'Image threshold settings',\n      evaluate: {\n        name: 'evaluate.thresholdMenu',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'opacityMenu',\n    uiType: 'ohif.opacityMenu',\n    props: {\n      icon: 'Opacity',\n      label: 'Opacity',\n      tooltip: 'Image opacity settings',\n      evaluate: {\n        name: 'evaluate.opacityMenu',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'Colorbar',\n    uiType: 'ohif.colorbar',\n    props: {\n      type: 'tool',\n      label: 'Colorbar',\n    },\n  },\n  {\n    id: 'Reset',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-reset',\n      label: 'Reset View',\n      tooltip: 'Reset View',\n      commands: 'resetViewport',\n      evaluate: 'evaluate.action',\n    },\n  },\n  {\n    id: 'rotate-right',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-rotate-right',\n      label: 'Rotate Right',\n      tooltip: 'Rotate +90',\n      commands: 'rotateViewportCW',\n      evaluate: [\n        'evaluate.action',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['video'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'flipHorizontal',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-flip-horizontal',\n      label: 'Flip Horizontal',\n      tooltip: 'Flip Horizontally',\n      commands: 'flipViewportHorizontal',\n      evaluate: [\n        'evaluate.viewportProperties.toggle',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['video', 'volume3d'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'ImageSliceSync',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'link',\n      label: 'Image Slice Sync',\n      tooltip: 'Enable position synchronization on stack viewports',\n      commands: {\n        commandName: 'toggleSynchronizer',\n        commandOptions: {\n          type: 'imageSlice',\n        },\n      },\n      listeners: {\n        [EVENTS.VIEWPORT_NEW_IMAGE_SET]: {\n          commandName: 'toggleImageSliceSync',\n          commandOptions: { toggledState: true },\n        },\n      },\n      evaluate: [\n        'evaluate.cornerstone.synchronizer',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['video', 'volume3d'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'ReferenceLines',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-referenceLines',\n      label: 'Reference Lines',\n      tooltip: 'Show Reference Lines',\n      commands: 'toggleEnabledDisabledToolbar',\n      listeners: {\n        [ViewportGridService.EVENTS.ACTIVE_VIEWPORT_ID_CHANGED]: callbacks('ReferenceLines'),\n        [ViewportGridService.EVENTS.VIEWPORTS_READY]: callbacks('ReferenceLines'),\n      },\n      evaluate: [\n        'evaluate.cornerstoneTool.toggle',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['video'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'ImageOverlayViewer',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'toggle-dicom-overlay',\n      label: 'Image Overlay',\n      tooltip: 'Toggle Image Overlay',\n      commands: 'toggleEnabledDisabledToolbar',\n      evaluate: [\n        'evaluate.cornerstoneTool.toggle',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['video'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'StackScroll',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-stack-scroll',\n      label: 'Stack Scroll',\n      tooltip: 'Stack Scroll',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'invert',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-invert',\n      label: 'Invert',\n      tooltip: 'Invert Colors',\n      commands: 'invertViewport',\n      evaluate: [\n        'evaluate.viewportProperties.toggle',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['video'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'Probe',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-probe',\n      label: 'Probe',\n      tooltip: 'Probe',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'Cine',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-cine',\n      label: 'Cine',\n      tooltip: 'Cine',\n      commands: 'toggleCine',\n      evaluate: [\n        'evaluate.cine',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['volume3d'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'Angle',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-angle',\n      label: 'Angle',\n      tooltip: 'Angle',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'CobbAngle',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'icon-tool-cobb-angle',\n      label: 'Cobb Angle',\n      tooltip: 'Cobb Angle',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'Magnify',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-magnify',\n      label: 'Zoom-in',\n      tooltip: 'Zoom-in',\n      commands: setToolActiveToolbar,\n      evaluate: [\n        'evaluate.cornerstoneTool',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['video'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'CalibrationLine',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-calibration',\n      label: 'Calibration',\n      tooltip: 'Calibration Line',\n      commands: setToolActiveToolbar,\n      evaluate: [\n        'evaluate.cornerstoneTool',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['video'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'TagBrowser',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'dicom-tag-browser',\n      label: 'Dicom Tag Browser',\n      tooltip: 'Dicom Tag Browser',\n      commands: 'openDICOMTagViewer',\n    },\n  },\n  {\n    id: 'AdvancedMagnify',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'icon-tool-loupe',\n      label: 'Magnify Probe',\n      tooltip: 'Magnify Probe',\n      commands: 'toggleActiveDisabledToolbar',\n      evaluate: [\n        'evaluate.cornerstoneTool.toggle.ifStrictlyDisabled',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['video'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'UltrasoundDirectionalTool',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'icon-tool-ultrasound-bidirectional',\n      label: 'Ultrasound Directional',\n      tooltip: 'Ultrasound Directional',\n      commands: setToolActiveToolbar,\n      evaluate: [\n        'evaluate.cornerstoneTool',\n        {\n          name: 'evaluate.modality.supported',\n          supportedModalities: ['US'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'UltrasoundPleuraBLineTool',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'icon-tool-ultrasound-bidirectional',\n      label: 'US Pleura B-line Annotation',\n      tooltip: 'US Pleura B-line Annotation',\n      commands: setToolActiveToolbar,\n      evaluate: [\n        'evaluate.cornerstoneTool',\n        {\n          name: 'evaluate.modality.supported',\n          supportedModalities: ['US'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'WindowLevelRegion',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'icon-tool-window-region',\n      label: 'Window Level Region',\n      tooltip: 'Window Level Region',\n      commands: setToolActiveToolbar,\n      evaluate: [\n        'evaluate.cornerstoneTool',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['video'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'Length',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-length',\n      label: 'Length',\n      tooltip: 'Length Tool',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'Bidirectional',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-bidirectional',\n      label: 'Bidirectional',\n      tooltip: 'Bidirectional Tool',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'ArrowAnnotate',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-annotate',\n      label: 'Annotation',\n      tooltip: 'Arrow Annotate',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'EllipticalROI',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-ellipse',\n      label: 'Ellipse',\n      tooltip: 'Ellipse ROI',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'RectangleROI',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-rectangle',\n      label: 'Rectangle',\n      tooltip: 'Rectangle ROI',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'CircleROI',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-circle',\n      label: 'Circle',\n      tooltip: 'Circle Tool',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'PlanarFreehandROI',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'icon-tool-freehand-roi',\n      label: 'Freehand ROI',\n      tooltip: 'Freehand ROI',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'SplineROI',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'icon-tool-spline-roi',\n      label: 'Spline ROI',\n      tooltip: 'Spline ROI',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'LivewireContour',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'icon-tool-livewire',\n      label: 'Livewire tool',\n      tooltip: 'Livewire tool',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  // Window Level\n  {\n    id: 'WindowLevel',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-window-level',\n      label: 'Window Level',\n      commands: setToolActiveToolbar,\n      evaluate: [\n        'evaluate.cornerstoneTool',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['wholeSlide'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'Pan',\n    uiType: 'ohif.toolButton',\n    props: {\n      type: 'tool',\n      icon: 'tool-move',\n      label: 'Pan',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'Zoom',\n    uiType: 'ohif.toolButton',\n    props: {\n      type: 'tool',\n      icon: 'tool-zoom',\n      label: 'Zoom',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'TrackballRotate',\n    uiType: 'ohif.toolButton',\n    props: {\n      type: 'tool',\n      icon: 'tool-3d-rotate',\n      label: '3D Rotate',\n      commands: setToolActiveToolbar,\n      evaluate: {\n        name: 'evaluate.cornerstoneTool',\n        disabledText: 'Select a 3D viewport to enable this tool',\n      },\n    },\n  },\n  {\n    id: 'Capture',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-capture',\n      label: 'Capture',\n      commands: 'showDownloadViewportModal',\n      evaluate: [\n        'evaluate.action',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['video', 'wholeSlide'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'Layout',\n    uiType: 'ohif.layoutSelector',\n    props: {\n      rows: 3,\n      columns: 4,\n      evaluate: 'evaluate.action',\n    },\n  },\n  {\n    id: 'Crosshairs',\n    uiType: 'ohif.toolButton',\n    props: {\n      type: 'tool',\n      icon: 'tool-crosshair',\n      label: 'Crosshairs',\n      commands: {\n        commandName: 'setToolActiveToolbar',\n        commandOptions: {\n          toolGroupIds: ['mpr'],\n        },\n      },\n      evaluate: {\n        name: 'evaluate.cornerstoneTool',\n        disabledText: 'Select an MPR viewport to enable this tool',\n      },\n    },\n  },\n  // {\n  //   id: 'Undo',\n  //   uiType: 'ohif.toolButton',\n  //   props: {\n  //     type: 'tool',\n  //     icon: 'prev-arrow',\n  //     label: 'Undo',\n  //     commands: {\n  //       commandName: 'undo',\n  //     },\n  //     evaluate: 'evaluate.action',\n  //   },\n  // },\n  // {\n  //   id: 'Redo',\n  //   uiType: 'ohif.toolButton',\n  //   props: {\n  //     type: 'tool',\n  //     icon: 'next-arrow',\n  //     label: 'Redo',\n  //     commands: {\n  //       commandName: 'redo',\n  //     },\n  //     evaluate: 'evaluate.action',\n  //   },\n  // },\n];\n\nexport default toolbarButtons;\n"],"names":[],"sourceRoot":""}