/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "../../../node_modules/@thewtex/zstddec/dist/zstddec.modern.js":
/*!*********************************************************************!*\
  !*** ../../../node_modules/@thewtex/zstddec/dist/zstddec.modern.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ZSTDDecoder: () => (/* binding */ ZSTDDecoder)
/* harmony export */ });
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "../../../node_modules/buffer/index.js")["Buffer"];
let init;
let instance;
let heap;
const IMPORT_OBJECT = {
  env: {
    emscripten_notify_memory_growth: function (index) {
      heap = new Uint8Array(instance.exports.memory.buffer);
    }
  }
};
/**
 * ZSTD (Zstandard) decoder.
 */
class ZSTDDecoder {
  init() {
    if (init) return init;
    if (typeof fetch !== 'undefined') {
      // Web.
      init = fetch('data:application/wasm;base64,' + wasm).then(response => response.arrayBuffer()).then(arrayBuffer => WebAssembly.instantiate(arrayBuffer, IMPORT_OBJECT)).then(this._init);
    } else {
      // Node.js.
      init = WebAssembly.instantiate(Buffer.from(wasm, 'base64'), IMPORT_OBJECT).then(this._init);
    }
    return init;
  }
  _init(result) {
    instance = result.instance;
    IMPORT_OBJECT.env.emscripten_notify_memory_growth(0); // initialize heap.
  }

  decode(array, uncompressedSize = 0) {
    if (!instance) throw new Error(`ZSTDDecoder: Await .init() before decoding.`);
    // Write compressed data into WASM memory.
    const compressedSize = array.byteLength;
    const compressedPtr = instance.exports.malloc(compressedSize);
    heap.set(array, compressedPtr);
    // Decompress into WASM memory.
    uncompressedSize = uncompressedSize || Number(instance.exports.ZSTD_findDecompressedSize(compressedPtr, compressedSize));
    const uncompressedPtr = instance.exports.malloc(uncompressedSize);
    const actualSize = instance.exports.ZSTD_decompress(uncompressedPtr, uncompressedSize, compressedPtr, compressedSize);
    // Read decompressed data and free WASM memory.
    const dec = heap.slice(uncompressedPtr, uncompressedPtr + actualSize);
    instance.exports.free(compressedPtr);
    instance.exports.free(uncompressedPtr);
    return dec;
  }
}
/**
 * BSD License
 *
 * For Zstandard software
 *
 * Copyright (c) 2016-present, Yann Collet, Facebook, Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 *  * Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 *  * Neither the name Facebook nor the names of its contributors may be used to
 *    endorse or promote products derived from this software without specific
 *    prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
// wasm:begin
const wasm = '';
// wasm:end


//# sourceMappingURL=zstddec.modern.js.map


/***/ }),

/***/ "../../../node_modules/itk-wasm/dist/pipeline/internal/load-emscripten-module-web-worker.js":
/*!**************************************************************************************************!*\
  !*** ../../../node_modules/itk-wasm/dist/pipeline/internal/load-emscripten-module-web-worker.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "../../../node_modules/axios/index.js");
/* harmony import */ var _thewtex_zstddec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @thewtex/zstddec */ "../../../node_modules/@thewtex/zstddec/dist/zstddec.modern.js");


const decoder = new _thewtex_zstddec__WEBPACK_IMPORTED_MODULE_1__.ZSTDDecoder();
let decoderInitialized = false;
// Load the Emscripten module in the browser in a WebWorker.
//
// baseUrl is usually taken from 'getPipelinesBaseUrl()', but a different value
// could be passed.
async function loadEmscriptenModuleWebWorker(moduleRelativePathOrURL, baseUrl) {
    let modulePrefix = null;
    if (typeof moduleRelativePathOrURL !== 'string') {
        modulePrefix = moduleRelativePathOrURL.href;
    }
    else if (moduleRelativePathOrURL.startsWith('http')) {
        modulePrefix = moduleRelativePathOrURL;
    }
    else {
        modulePrefix = `${baseUrl}/${moduleRelativePathOrURL}`;
    }
    if (modulePrefix.endsWith('.js')) {
        modulePrefix = modulePrefix.substring(0, modulePrefix.length - 3);
    }
    if (modulePrefix.endsWith('.wasm')) {
        modulePrefix = modulePrefix.substring(0, modulePrefix.length - 5);
    }
    const wasmBinaryPath = `${modulePrefix}.wasm`;
    const response = await axios__WEBPACK_IMPORTED_MODULE_0__["default"].get(`${wasmBinaryPath}.zst`, { responseType: 'arraybuffer' });
    if (!decoderInitialized) {
        await decoder.init();
        decoderInitialized = true;
    }
    const decompressedArray = decoder.decode(new Uint8Array(response.data));
    const wasmBinary = decompressedArray.buffer;
    const modulePath = `${modulePrefix}.js`;
    const result = await import(/* webpackIgnore: true */ /* @vite-ignore */ modulePath);
    const emscriptenModule = result.default({ wasmBinary });
    return emscriptenModule;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (loadEmscriptenModuleWebWorker);
//# sourceMappingURL=load-emscripten-module-web-worker.js.map

/***/ }),

/***/ "../../../node_modules/itk-wasm/dist/pipeline/web-workers/itk-wasm-pipeline.worker.js":
/*!********************************************************************************************!*\
  !*** ../../../node_modules/itk-wasm/dist/pipeline/web-workers/itk-wasm-pipeline.worker.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var comlink__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! comlink */ "../../../node_modules/comlink/dist/esm/comlink.mjs");
/* harmony import */ var _load_pipeline_module_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./load-pipeline-module.js */ "../../../node_modules/itk-wasm/dist/pipeline/web-workers/load-pipeline-module.js");
/* harmony import */ var _run_pipeline_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./run-pipeline.js */ "../../../node_modules/itk-wasm/dist/pipeline/web-workers/run-pipeline.js");



const workerOperations = {
    runPipeline: async function (pipelinePath, pipelineBaseUrl, args, outputs, inputs) {
        const pipelineModule = await (0,_load_pipeline_module_js__WEBPACK_IMPORTED_MODULE_1__["default"])(pipelinePath, pipelineBaseUrl);
        return await (0,_run_pipeline_js__WEBPACK_IMPORTED_MODULE_2__["default"])(pipelineModule, args, outputs, inputs);
    }
};
comlink__WEBPACK_IMPORTED_MODULE_0__.expose(workerOperations);
//# sourceMappingURL=itk-wasm-pipeline.worker.js.map

/***/ }),

/***/ "../../../node_modules/itk-wasm/dist/pipeline/web-workers/load-pipeline-module.js":
/*!****************************************************************************************!*\
  !*** ../../../node_modules/itk-wasm/dist/pipeline/web-workers/load-pipeline-module.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _internal_load_emscripten_module_web_worker_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/load-emscripten-module-web-worker.js */ "../../../node_modules/itk-wasm/dist/pipeline/internal/load-emscripten-module-web-worker.js");

// To cache loaded pipeline modules wrapped in a Promise
const pipelineToModule = new Map();
async function loadPipelineModule(pipelinePath, baseUrl) {
    let moduleRelativePathOrURL = pipelinePath;
    let pipeline = pipelinePath;
    let pipelineModule = null;
    if (typeof pipelinePath !== 'string') {
        moduleRelativePathOrURL = new URL(pipelinePath.href);
        pipeline = moduleRelativePathOrURL.href;
    }
    if (pipelineToModule.has(pipeline)) {
        pipelineModule = await pipelineToModule.get(pipeline);
    }
    else {
        pipelineToModule.set(pipeline, (0,_internal_load_emscripten_module_web_worker_js__WEBPACK_IMPORTED_MODULE_0__["default"])(moduleRelativePathOrURL, baseUrl));
        pipelineModule = await pipelineToModule.get(pipeline);
    }
    return pipelineModule;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (loadPipelineModule);
//# sourceMappingURL=load-pipeline-module.js.map

/***/ }),

/***/ "../../../node_modules/itk-wasm/dist/pipeline/web-workers/run-pipeline.js":
/*!********************************************************************************!*\
  !*** ../../../node_modules/itk-wasm/dist/pipeline/web-workers/run-pipeline.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var comlink__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! comlink */ "../../../node_modules/comlink/dist/esm/comlink.mjs");
/* harmony import */ var _internal_run_pipeline_emscripten_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/run-pipeline-emscripten.js */ "../../../node_modules/itk-wasm/dist/pipeline/internal/run-pipeline-emscripten.js");
/* harmony import */ var _get_transferables_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../get-transferables.js */ "../../../node_modules/itk-wasm/dist/get-transferables.js");
/* harmony import */ var _interface_types_interface_types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../interface-types/interface-types.js */ "../../../node_modules/itk-wasm/dist/interface-types/interface-types.js");
/* harmony import */ var _internal_image_transferables_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/image-transferables.js */ "../../../node_modules/itk-wasm/dist/pipeline/internal/image-transferables.js");
/* harmony import */ var _internal_mesh_transferables_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../internal/mesh-transferables.js */ "../../../node_modules/itk-wasm/dist/pipeline/internal/mesh-transferables.js");
/* harmony import */ var _internal_poly_data_transferables_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/poly-data-transferables.js */ "../../../node_modules/itk-wasm/dist/pipeline/internal/poly-data-transferables.js");







async function runPipeline(pipelineModule, args, outputs, inputs) {
    const result = (0,_internal_run_pipeline_emscripten_js__WEBPACK_IMPORTED_MODULE_1__["default"])(pipelineModule, args, outputs, inputs);
    const transferables = [];
    result.outputs.forEach(function (output) {
        if (output.type === _interface_types_interface_types_js__WEBPACK_IMPORTED_MODULE_3__["default"].BinaryStream || output.type === _interface_types_interface_types_js__WEBPACK_IMPORTED_MODULE_3__["default"].BinaryFile) {
            // Binary data
            const binary = output.data;
            transferables.push(binary);
        }
        else if (output.type === _interface_types_interface_types_js__WEBPACK_IMPORTED_MODULE_3__["default"].Image) {
            // Image data
            const image = output.data;
            transferables.push(...(0,_internal_image_transferables_js__WEBPACK_IMPORTED_MODULE_4__["default"])(image));
        }
        else if (output.type === _interface_types_interface_types_js__WEBPACK_IMPORTED_MODULE_3__["default"].Mesh) {
            const mesh = output.data;
            transferables.push(...(0,_internal_mesh_transferables_js__WEBPACK_IMPORTED_MODULE_5__["default"])(mesh));
        }
        else if (output.type === _interface_types_interface_types_js__WEBPACK_IMPORTED_MODULE_3__["default"].PolyData) {
            const polyData = output.data;
            transferables.push(...(0,_internal_poly_data_transferables_js__WEBPACK_IMPORTED_MODULE_6__["default"])(polyData));
        }
    });
    return comlink__WEBPACK_IMPORTED_MODULE_0__.transfer(result, (0,_get_transferables_js__WEBPACK_IMPORTED_MODULE_2__["default"])(transferables, true));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (runPipeline);
//# sourceMappingURL=run-pipeline.js.map

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };
/******/ 		__webpack_require__.i.forEach(function(handler) { handler(execOptions); });
/******/ 		module = execOptions.module;
/******/ 		execOptions.factory.call(module.exports, module, module.exports, execOptions.require);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = __webpack_module_cache__;
/******/ 	
/******/ 	// expose the module execution interceptor
/******/ 	__webpack_require__.i = [];
/******/ 	
/******/ 	// the startup function
/******/ 	__webpack_require__.x = () => {
/******/ 		// Load entry module and return exports
/******/ 		var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors-node_modules_comlink_dist_esm_comlink_mjs","vendors-node_modules_axios_index_js-node_modules_itk-wasm_dist_get-transferables_js-node_modu-162441"], () => (__webpack_require__("../../../node_modules/itk-wasm/dist/pipeline/web-workers/itk-wasm-pipeline.worker.js")))
/******/ 		__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 		return __webpack_exports__;
/******/ 	};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks and sibling chunks for the entrypoint
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "/ohif/";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/react refresh */
/******/ 	(() => {
/******/ 		const setup = (moduleId) => {
/******/ 			const refresh = {
/******/ 				moduleId: moduleId,
/******/ 				register: (type, id) => {
/******/ 					const typeId = moduleId + " " + id;
/******/ 					refresh.runtime.register(type, typeId);
/******/ 				},
/******/ 				signature: () => (refresh.runtime.createSignatureFunctionForTransform()),
/******/ 				runtime: {
/******/ 					createSignatureFunctionForTransform: () => ((type) => (type)),
/******/ 					register: x => {}
/******/ 				},
/******/ 			};
/******/ 			return refresh;
/******/ 		}
/******/ 		
/******/ 		__webpack_require__.i.push((options) => {
/******/ 			const originalFactory = options.factory;
/******/ 			options.factory = function(moduleObject, moduleExports, webpackRequire) {
/******/ 				const hotRequire = (request) => (webpackRequire(request));
/******/ 				const createPropertyDescriptor = (name) => {
/******/ 					return {
/******/ 						configurable: true,
/******/ 						enumerable: true,
/******/ 						get: () => (webpackRequire[name]),
/******/ 						set: (value) => {
/******/ 							webpackRequire[name] = value;
/******/ 						},
/******/ 					};
/******/ 				};
/******/ 				for (const name in webpackRequire) {
/******/ 					if (Object.prototype.hasOwnProperty.call(webpackRequire, name) && name !== "$Refresh$") {
/******/ 						Object.defineProperty(hotRequire, name, createPropertyDescriptor(name));
/******/ 					}
/******/ 				}
/******/ 				hotRequire.$Refresh$ = setup(options.id);
/******/ 				originalFactory.call(this, moduleObject, moduleExports, hotRequire);
/******/ 			};
/******/ 		});
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/importScripts chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded chunks
/******/ 		// "1" means "already loaded"
/******/ 		var installedChunks = {
/******/ 			"vendors-node_modules_itk-wasm_dist_pipeline_web-workers_itk-wasm-pipeline_worker_js": 1
/******/ 		};
/******/ 		
/******/ 		// importScripts chunk loading
/******/ 		var installChunk = (data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__webpack_require__);
/******/ 			while(chunkIds.length)
/******/ 				installedChunks[chunkIds.pop()] = 1;
/******/ 			parentChunkLoadingFunction(data);
/******/ 		};
/******/ 		__webpack_require__.f.i = (chunkId, promises) => {
/******/ 			// "1" is the signal for "already loaded"
/******/ 			if(!installedChunks[chunkId]) {
/******/ 				if(true) { // all chunks have JS
/******/ 					importScripts(__webpack_require__.p + __webpack_require__.u(chunkId));
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var chunkLoadingGlobal = globalThis["webpackChunk"] = globalThis["webpackChunk"] || [];
/******/ 		var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);
/******/ 		chunkLoadingGlobal.push = installChunk;
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/startup chunk dependencies */
/******/ 	(() => {
/******/ 		var next = __webpack_require__.x;
/******/ 		__webpack_require__.x = () => {
/******/ 			return Promise.all([
/******/ 				__webpack_require__.e("vendors-node_modules_comlink_dist_esm_comlink_mjs"),
/******/ 				__webpack_require__.e("vendors-node_modules_axios_index_js-node_modules_itk-wasm_dist_get-transferables_js-node_modu-162441")
/******/ 			]).then(next);
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// module cache are used so entry inlining is disabled
/******/ 	// run startup
/******/ 	var __webpack_exports__ = __webpack_require__.x();
/******/ 	
/******/ })()
;
//# sourceMappingURL=vendors-node_modules_itk-wasm_dist_pipeline_web-workers_itk-wasm-pipeline_worker_js.js.map